(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    435067,       9135]
NotebookOptionsPosition[    430651,       9058]
NotebookOutlinePosition[    431039,       9074]
CellTagsIndexPosition[    430996,       9071]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Here we calculate thermal - visco - elastic waves in water and below \
calculate how these waves reflect from a halfspace \
\>", "Section",
 CellChangeTimes->{{3.846761855406546*^9, 3.846761883661519*^9}, {
  3.846761925574357*^9, 
  3.8467619428493423`*^9}},ExpressionUUID->"27aba6e3-a98b-4bdb-b1b5-\
76f20833b5ca"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.671632405384658*^9, 3.671632488371503*^9}, {
   3.671632582529538*^9, 3.6716325875138493`*^9}, {3.671632625036207*^9, 
   3.671632638403145*^9}, {3.671632695028357*^9, 3.671632766464682*^9}, {
   3.671632796986567*^9, 3.6716328195301743`*^9}, 3.671633297257812*^9, {
   3.671636373513535*^9, 3.671636514685091*^9}, {3.6716365508027563`*^9, 
   3.6716366473083487`*^9}, 3.6716368391812677`*^9, {3.671636886928454*^9, 
   3.671636972828861*^9}, {3.67163703029032*^9, 3.671637114728389*^9}, {
   3.6716371545952682`*^9, 3.6716371566476107`*^9}, {3.671637311655805*^9, 
   3.671637325346817*^9}, {3.671637685808099*^9, 3.671637698532732*^9}, 
   3.67163782087316*^9, {3.671637928595154*^9, 3.671637978536644*^9}, {
   3.671638122647625*^9, 3.671638270477036*^9}, {3.671638327251482*^9, 
   3.6716383735457773`*^9}, {3.6716384923132143`*^9, 3.6716384930081*^9}, {
   3.671704689684477*^9, 3.671704729447378*^9}, 3.671704884453126*^9, 
   3.671704946410304*^9, {3.671810798456203*^9, 3.671810798810623*^9}, {
   3.6718109825363197`*^9, 3.671810984925274*^9}, {3.671811275541978*^9, 
   3.6718112762991133`*^9}, {3.671811338770423*^9, 3.671811367244022*^9}, {
   3.6718124591116533`*^9, 3.671812474811141*^9}, {3.671812516193061*^9, 
   3.6718125318694277`*^9}, {3.688107400595813*^9, 3.688107474642775*^9}, {
   3.68810772936517*^9, 3.6881077595088873`*^9}, {3.688107821115095*^9, 
   3.6881078243790627`*^9}, {3.688107863138212*^9, 3.6881078633620453`*^9}, {
   3.688108218371337*^9, 3.68810821886615*^9}, {3.688108250841687*^9, 
   3.688108255322873*^9}, {3.688112217757018*^9, 3.6881122181253443`*^9}, {
   3.6881204074591312`*^9, 3.6881204094994307`*^9}, {3.6881204593123083`*^9, 
   3.688120462314473*^9}, {3.688120960689044*^9, 3.6881209757609463`*^9}, {
   3.688121257292588*^9, 3.688121286352173*^9}, {3.6881213176666183`*^9, 
   3.688121409184668*^9}, {3.688121462495398*^9, 3.688121498063978*^9}, {
   3.6881224518452044`*^9, 3.688122452445363*^9}, {3.6881938272683573`*^9, 
   3.688193831538353*^9}, {3.68819399871078*^9, 3.688194042499385*^9}, {
   3.688211347884446*^9, 3.6882113913445253`*^9}, {3.688211545069409*^9, 
   3.6882115724204206`*^9}, {3.688295841189642*^9, 3.688295869709099*^9}, {
   3.688296122410707*^9, 3.6882961260803137`*^9}, {3.68889804457693*^9, 
   3.68889804676022*^9}, {3.688900046596409*^9, 3.6889000538999453`*^9}, 
   3.68892265701758*^9, {3.688926546319962*^9, 3.688926567797627*^9}, {
   3.688926833802278*^9, 3.688926866068781*^9}, {3.688926914526997*^9, 
   3.6889269253368998`*^9}, {3.702378018820551*^9, 3.7023780487056427`*^9}, {
   3.7032422526775637`*^9, 3.703242254621409*^9}, {3.7032424100488243`*^9, 
   3.703242418600801*^9}, {3.7032432652830963`*^9, 3.703243268923964*^9}, {
   3.703243491441018*^9, 3.70324349167179*^9}, 3.7041894363279467`*^9, 
   3.704189869961132*^9, 3.7041902517026253`*^9, {3.84676154682859*^9, 
   3.8467615511017313`*^9}, {3.846761587689274*^9, 3.846761593313809*^9}},
 FontSize->16,ExpressionUUID->"9f6beb21-192d-4453-96ea-bdca6dae0e1a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"dir", "=", " ", 
  RowBox[{"NotebookDirectory", "[", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Needs", "[", 
   RowBox[{"\"\<ThermalWaves`\>\"", ",", 
    RowBox[{"dir", "<>", "\"\<../packages/ThermalWaves.wl\>\""}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Needs", "[", 
   RowBox[{"\"\<ThermalPotentials`\>\"", ",", 
    RowBox[{"dir", "<>", "\"\<../packages/ThermalPotentials.wl\>\""}]}], 
   "]"}], ";"}], "\n", 
 RowBox[{"NotebookEvaluate", "[", 
  RowBox[{"dir", "<>", "\"\<../packages/ScatteringTW.nb\>\""}], "]"}], "\n", 
 RowBox[{"Names", "[", "\"\<ThermalWaves`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"?", "ThermalWaves"}]}], "Input",
 CellChangeTimes->{{3.671632405384658*^9, 3.671632488371503*^9}, {
   3.671632582529538*^9, 3.6716325875138493`*^9}, {3.671632625036207*^9, 
   3.671632638403145*^9}, {3.671632695028357*^9, 3.671632766464682*^9}, {
   3.671632796986567*^9, 3.6716328195301743`*^9}, 3.671633297257812*^9, {
   3.671636373513535*^9, 3.671636514685091*^9}, {3.6716365508027563`*^9, 
   3.6716366473083487`*^9}, 3.6716368391812677`*^9, {3.671636886928454*^9, 
   3.671636972828861*^9}, {3.67163703029032*^9, 3.671637114728389*^9}, {
   3.6716371545952682`*^9, 3.6716371566476107`*^9}, {3.671637311655805*^9, 
   3.671637325346817*^9}, {3.671637685808099*^9, 3.671637698532732*^9}, 
   3.67163782087316*^9, {3.671637928595154*^9, 3.671637978536644*^9}, {
   3.671638122647625*^9, 3.671638270477036*^9}, {3.671638327251482*^9, 
   3.6716383735457773`*^9}, {3.6716384923132143`*^9, 3.6716384930081*^9}, {
   3.671704689684477*^9, 3.671704729447378*^9}, 3.671704884453126*^9, 
   3.671704946410304*^9, {3.671810798456203*^9, 3.671810798810623*^9}, {
   3.6718109825363197`*^9, 3.671810984925274*^9}, {3.671811275541978*^9, 
   3.6718112762991133`*^9}, {3.671811338770423*^9, 3.671811367244022*^9}, {
   3.6718124591116533`*^9, 3.671812474811141*^9}, {3.671812516193061*^9, 
   3.6718125318694277`*^9}, {3.688107400595813*^9, 3.688107474642775*^9}, {
   3.68810772936517*^9, 3.6881077595088873`*^9}, {3.688107821115095*^9, 
   3.6881078243790627`*^9}, {3.688107863138212*^9, 3.6881078633620453`*^9}, {
   3.688108218371337*^9, 3.68810821886615*^9}, {3.688108250841687*^9, 
   3.688108255322873*^9}, {3.688112217757018*^9, 3.6881122181253443`*^9}, {
   3.6881204074591312`*^9, 3.6881204094994307`*^9}, {3.6881204593123083`*^9, 
   3.688120462314473*^9}, {3.688120960689044*^9, 3.6881209757609463`*^9}, {
   3.688121257292588*^9, 3.688121286352173*^9}, {3.6881213176666183`*^9, 
   3.688121409184668*^9}, {3.688121462495398*^9, 3.688121498063978*^9}, {
   3.6881224518452044`*^9, 3.688122452445363*^9}, {3.6881938272683573`*^9, 
   3.688193831538353*^9}, {3.68819399871078*^9, 3.688194042499385*^9}, {
   3.688211347884446*^9, 3.6882113913445253`*^9}, {3.688211545069409*^9, 
   3.6882115724204206`*^9}, {3.688295841189642*^9, 3.688295869709099*^9}, {
   3.688296122410707*^9, 3.6882961260803137`*^9}, {3.68889804457693*^9, 
   3.68889804676022*^9}, {3.688900046596409*^9, 3.6889000538999453`*^9}, 
   3.68892265701758*^9, {3.688926546319962*^9, 3.688926567797627*^9}, {
   3.688926833802278*^9, 3.688926866068781*^9}, {3.688926914526997*^9, 
   3.6889269253368998`*^9}, {3.702378018820551*^9, 3.7023780487056427`*^9}, {
   3.7032422526775637`*^9, 3.703242254621409*^9}, {3.7032424100488243`*^9, 
   3.703242418600801*^9}, {3.7032432652830963`*^9, 3.703243268923964*^9}, {
   3.703243491441018*^9, 3.70324349167179*^9}, 3.7041894363279467`*^9, 
   3.704189869961132*^9, 3.7041902517026253`*^9, {3.84676154682859*^9, 
   3.8467615511017313`*^9}, {3.846761587689274*^9, 3.846761588421002*^9}, {
   3.846761628165473*^9, 3.846761628859624*^9}, {3.846761778946868*^9, 
   3.84676179118194*^9}},
 FontSize->16,
 CellLabel->"In[1]:=",ExpressionUUID->"f2a851b3-393a-4380-be6f-429c56877bab"],

Cell[BoxData["\<\"/home/art/drive-sheffield/Mathematica/\
LinearThermoViscoElasticity/examples/\"\>"], "Output",
 CellChangeTimes->{
  3.702378050266102*^9, {3.703242419398773*^9, 3.703242427525565*^9}, 
   3.7032432712038317`*^9, {3.703243345895628*^9, 3.703243364074341*^9}, 
   3.703243492657691*^9, 3.70324572333083*^9, 3.704189251606056*^9, {
   3.7041894276513968`*^9, 3.7041894371949263`*^9}, {3.704189650260558*^9, 
   3.704189663757421*^9}, 3.704190252875409*^9, 3.704190287284186*^9, 
   3.726474498308008*^9, {3.846761569935411*^9, 3.846761594873939*^9}, {
   3.846761767752274*^9, 3.846761794398266*^9}, 3.846766713032012*^9, 
   3.846766827168646*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"bcfb01ad-5f2f-4ec3-989f-aec8b086b9db"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"DisplacementTW\"\>", ",", "\<\"EnergyFluxTW\"\>", 
   ",", "\<\"PlotTW\"\>", ",", "\<\"PlusTW\"\>", ",", "\<\"StressTW\"\>", 
   ",", "\<\"ThermalWaves\"\>", ",", "\<\"TWQ\"\>", 
   ",", "\<\"\[Theta]TW\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.702378050266102*^9, {3.703242419398773*^9, 3.703242427525565*^9}, 
   3.7032432712038317`*^9, {3.703243345895628*^9, 3.703243364074341*^9}, 
   3.703243492657691*^9, 3.70324572333083*^9, 3.704189251606056*^9, {
   3.7041894276513968`*^9, 3.7041894371949263`*^9}, {3.704189650260558*^9, 
   3.704189663757421*^9}, 3.704190252875409*^9, 3.704190287284186*^9, 
   3.726474498308008*^9, {3.846761569935411*^9, 3.846761594873939*^9}, {
   3.846761767752274*^9, 3.846761794398266*^9}, 3.846766713032012*^9, 
   3.84676682747587*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"b3eca7e8-595d-42ce-aee8-e40bc9997842"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"ThermalWaves[subN,waveDirection, rng\[Omega]] = {TW\
\[CurlyPhi], TW\[CurlyTheta], TW\[Psi]}, where TW is a thermowave. See \
section \\\"Reflection from a halfspace\\\" in the document TVE-equations.pdf \
for more details.  \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"ThermalWaves", "[", 
                    
                    RowBox[{
                    "ThermalWaves`Private`subN_", ",", 
                    "ThermalWaves`Private`waveDirection_", ",", 
                    "ThermalWaves`Private`rng\[Omega]_"}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "ThermalWaves`Private`NSqrt\[Lambda]\[CurlyPhi]\[Omega]", 
                    ",", "ThermalWaves`Private`NSqrt\[Lambda]\[CurlyTheta]\
\[Omega]", ",", "ThermalWaves`Private`NSqrt\[Lambda]\[Psi]\[Omega]", ",", 
                    "ThermalWaves`Private`NV\[CurlyPhi]", ",", 
                    "ThermalWaves`Private`NV\[CurlyTheta]", ",", 
                    RowBox[{"ThermalWaves`Private`vecNs", "=", 
                    RowBox[{"ThermalWaves`Private`Unitvec3D", "/@", 
                    RowBox[{"ArrayReshape", "[", 
                    RowBox[{"ThermalWaves`Private`waveDirection", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}], ",", "\"Periodic\""}], 
                    "]"}]}]}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{
                    "ThermalWaves`Private`NSqrt\[Lambda]\[CurlyPhi]\[Omega]", 
                    "[", "ThermalWaves`Private`\[Omega]_", "]"}], "=", 
                    RowBox[{
                    RowBox[{"ThermalWaves`Private`OutgoingWaveNumber", "[", 
                    RowBox[{
                    SqrtBox[
                    
                    RowBox[{"ThermalWaves`Private`\[Lambda]", "[", 
                    "ThermalWaves`Private`\[CurlyPhi]", "]"}]], "/.", 
                    "\[VeryThinSpace]", "ThermalWaves`Private`subN"}], "]"}], 
                    "/.", "\[VeryThinSpace]", 
                    
                    RowBox[{"\[FormalW]", "\[Rule]", 
                    "ThermalWaves`Private`\[Omega]"}]}]}], ";", 
                    RowBox[{
                    
                    RowBox[{
                    "ThermalWaves`Private`NSqrt\[Lambda]\[CurlyTheta]\[Omega]\
", "[", "ThermalWaves`Private`\[Omega]_", "]"}], "=", 
                    RowBox[{
                    RowBox[{"ThermalWaves`Private`OutgoingWaveNumber", "[", 
                    RowBox[{
                    SqrtBox[
                    
                    RowBox[{"ThermalWaves`Private`\[Lambda]", "[", 
                    "ThermalWaves`Private`\[CurlyTheta]", "]"}]], "/.", 
                    "\[VeryThinSpace]", "ThermalWaves`Private`subN"}], "]"}], 
                    "/.", "\[VeryThinSpace]", 
                    
                    RowBox[{"\[FormalW]", "\[Rule]", 
                    "ThermalWaves`Private`\[Omega]"}]}]}], ";", 
                    RowBox[{
                    
                    RowBox[{
                    "ThermalWaves`Private`NSqrt\[Lambda]\[Psi]\[Omega]", "[", 
                    "ThermalWaves`Private`\[Omega]_", "]"}], "=", 
                    RowBox[{
                    RowBox[{"ThermalWaves`Private`OutgoingWaveNumber", "[", 
                    RowBox[{
                    SqrtBox[
                    
                    RowBox[{"ThermalWaves`Private`\[Lambda]", "[", 
                    "ThermalWaves`Private`\[Psi]", "]"}]], "/.", 
                    "\[VeryThinSpace]", "ThermalWaves`Private`subN"}], "]"}], 
                    "/.", "\[VeryThinSpace]", 
                    
                    RowBox[{"\[FormalW]", "\[Rule]", 
                    "ThermalWaves`Private`\[Omega]"}]}]}], ";", 
                    RowBox[{
                    
                    RowBox[{"ThermalWaves`Private`NV\[CurlyPhi]", "[", 
                    "ThermalWaves`Private`\[Omega]_", "]"}], "=", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"ThermalWaves`Private`V", "[", 
                    "ThermalWaves`Private`\[CurlyPhi]", "]"}], "/.", 
                    "\[VeryThinSpace]", "ThermalWaves`Private`subN"}], "/.", 
                    "\[VeryThinSpace]", 
                    
                    RowBox[{"\[FormalW]", "\[Rule]", 
                    "ThermalWaves`Private`\[Omega]"}]}]}], ";", 
                    RowBox[{
                    
                    RowBox[{"ThermalWaves`Private`NV\[CurlyTheta]", "[", 
                    "ThermalWaves`Private`\[Omega]_", "]"}], "=", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"ThermalWaves`Private`V", "[", 
                    "ThermalWaves`Private`\[CurlyTheta]", "]"}], "/.", 
                    "\[VeryThinSpace]", "ThermalWaves`Private`subN"}], "/.", 
                    "\[VeryThinSpace]", 
                    
                    RowBox[{"\[FormalW]", "\[Rule]", 
                    "ThermalWaves`Private`\[Omega]"}]}]}], ";", 
                    RowBox[{"Return", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Association", "[", 
                    RowBox[{
                    
                    RowBox[{"\"Name\"", "\[Rule]", 
                    "\"Pressure dominated Wave \[CurlyPhi]\""}], ",", 
                    
                    RowBox[{"\"rng\[Omega]\"", "\[Rule]", 
                    "ThermalWaves`Private`rng\[Omega]"}], ",", 
                    RowBox[{"\"WaveNumbers\"", "\[Rule]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"ThermalWaves`Private`vecNs", 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                    " ", 
                    RowBox[{
                    "ThermalWaves`Private`NSqrt\[Lambda]\[CurlyPhi]\[Omega]", 
                    "[", "#1", "]"}]}], "&"}], ")"}], "/@", 
                    "ThermalWaves`Private`rng\[Omega]"}]}], ",", 
                    RowBox[{"\"WaveVectors\"", "\[Rule]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox["#1", 
                    RowBox[{"Norm", "[", "#1", "]"}]], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}]}], "}"}], 
                    "&"}], ")"}], "/@", 
                    
                    RowBox[{"ThermalWaves`Private`NV\[CurlyPhi]", "/@", 
                    "ThermalWaves`Private`rng\[Omega]"}]}]}], ",", 
                    RowBox[{"\"parameters\"", "\[Rule]", 
                    
                    RowBox[{"AddToNsub", "[", "ThermalWaves`Private`subN", 
                    "]"}]}]}], "]"}], ",", 
                    RowBox[{"Association", "[", 
                    RowBox[{
                    RowBox[{"\"Name\"", "\[Rule]", 
                    "\"Thermal dominated Wave \[CurlyTheta]\""}], ",", 
                    
                    RowBox[{"\"rng\[Omega]\"", "\[Rule]", 
                    "ThermalWaves`Private`rng\[Omega]"}], ",", 
                    RowBox[{"\"WaveNumbers\"", "\[Rule]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"ThermalWaves`Private`vecNs", 
                    "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                    " ", 
                    RowBox[{
                    "ThermalWaves`Private`NSqrt\[Lambda]\[CurlyTheta]\[Omega]\
", "[", "#1", "]"}]}], "&"}], ")"}], "/@", 
                    "ThermalWaves`Private`rng\[Omega]"}]}], ",", 
                    RowBox[{"\"WaveVectors\"", "\[Rule]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox["#1", 
                    RowBox[{"Norm", "[", "#1", "]"}]], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}]}], "}"}], 
                    "&"}], ")"}], "/@", 
                    
                    RowBox[{"ThermalWaves`Private`NV\[CurlyTheta]", "/@", 
                    "ThermalWaves`Private`rng\[Omega]"}]}]}], ",", 
                    RowBox[{"\"parameters\"", "\[Rule]", 
                    
                    RowBox[{"AddToNsub", "[", "ThermalWaves`Private`subN", 
                    "]"}]}]}], "]"}], ",", 
                    RowBox[{"Association", "[", 
                    RowBox[{
                    RowBox[{"\"Name\"", "\[Rule]", "\"Shear Wave\""}], ",", 
                    
                    RowBox[{"\"rng\[Omega]\"", "\[Rule]", 
                    "ThermalWaves`Private`rng\[Omega]"}], ",", 
                    RowBox[{"\"WaveNumbers\"", "\[Rule]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"ThermalWaves`Private`vecNs", 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    " ", 
                    RowBox[{
                    "ThermalWaves`Private`NSqrt\[Lambda]\[Psi]\[Omega]", "[", 
                    "#1", "]"}]}], "&"}], ")"}], "/@", 
                    "ThermalWaves`Private`rng\[Omega]"}]}], ",", 
                    RowBox[{"\"WaveVectors\"", "\[Rule]", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "0.`", ",", "0.`"}], "}"}]}], "}"}], 
                    ",", 
                    
                    RowBox[{"Length", "[", "ThermalWaves`Private`rng\[Omega]",
                     "]"}]}], "]"}]}], ",", 
                    RowBox[{"\"parameters\"", "\[Rule]", 
                    
                    RowBox[{"AddToNsub", "[", "ThermalWaves`Private`subN", 
                    "]"}]}]}], "]"}]}], "}"}], "]"}]}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ThermalWaves`ThermalWaves\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"ThermalWaves[subN,waveDirection, rng\[Omega]] = {TW\
\[CurlyPhi], TW\[CurlyTheta], TW\[Psi]}, where TW is a thermowave. See \
section \\\"Reflection from a halfspace\\\" in the document TVE-equations.pdf \
for more details.  \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {4., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {4., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "ThermalWaves[subN,waveDirection, rng\[Omega]] = {TW\[CurlyPhi], TW\
\[CurlyTheta], TW\[Psi]}, where TW is a thermowave. See section \"Reflection \
from a halfspace\" in the document TVE-equations.pdf for more details.  ", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ThermalWaves`ThermalWaves, {ThermalWaves`ThermalWaves[
         Pattern[ThermalWaves`Private`subN, 
          Blank[]], 
         Pattern[ThermalWaves`Private`waveDirection, 
          Blank[]], 
         Pattern[ThermalWaves`Private`rng\[Omega], 
          Blank[]]] :> 
       Module[{ThermalWaves`Private`NSqrt\[Lambda]\[CurlyPhi]\[Omega], 
          ThermalWaves`Private`NSqrt\[Lambda]\[CurlyTheta]\[Omega], 
          ThermalWaves`Private`NSqrt\[Lambda]\[Psi]\[Omega], 
          ThermalWaves`Private`NV\[CurlyPhi], 
          ThermalWaves`Private`NV\[CurlyTheta], ThermalWaves`Private`vecNs = 
          Map[ThermalWaves`Private`Unitvec3D, 
            ArrayReshape[
            ThermalWaves`Private`waveDirection, {3, 3}, "Periodic"]]}, 
         ThermalWaves`Private`NSqrt\[Lambda]\[CurlyPhi]\[Omega][
            Pattern[ThermalWaves`Private`\[Omega], 
             Blank[]]] = ReplaceAll[
            ThermalWaves`Private`OutgoingWaveNumber[
             ReplaceAll[
              Sqrt[
               ThermalWaves`Private`\[Lambda][
               ThermalWaves`Private`\[CurlyPhi]]], 
              ThermalWaves`Private`subN]], \[FormalW] -> 
            ThermalWaves`Private`\[Omega]]; 
         ThermalWaves`Private`NSqrt\[Lambda]\[CurlyTheta]\[Omega][
            Pattern[ThermalWaves`Private`\[Omega], 
             Blank[]]] = ReplaceAll[
            ThermalWaves`Private`OutgoingWaveNumber[
             ReplaceAll[
              Sqrt[
               ThermalWaves`Private`\[Lambda][
               ThermalWaves`Private`\[CurlyTheta]]], 
              ThermalWaves`Private`subN]], \[FormalW] -> 
            ThermalWaves`Private`\[Omega]]; 
         ThermalWaves`Private`NSqrt\[Lambda]\[Psi]\[Omega][
            Pattern[ThermalWaves`Private`\[Omega], 
             Blank[]]] = ReplaceAll[
            ThermalWaves`Private`OutgoingWaveNumber[
             ReplaceAll[
              Sqrt[
               ThermalWaves`Private`\[Lambda][ThermalWaves`Private`\[Psi]]], 
              ThermalWaves`Private`subN]], \[FormalW] -> 
            ThermalWaves`Private`\[Omega]]; ThermalWaves`Private`NV\[CurlyPhi][
            Pattern[ThermalWaves`Private`\[Omega], 
             Blank[]]] = ReplaceAll[
            ReplaceAll[
             ThermalWaves`Private`V[ThermalWaves`Private`\[CurlyPhi]], 
             ThermalWaves`Private`subN], \[FormalW] -> 
            ThermalWaves`Private`\[Omega]]; 
         ThermalWaves`Private`NV\[CurlyTheta][
            Pattern[ThermalWaves`Private`\[Omega], 
             Blank[]]] = ReplaceAll[
            ReplaceAll[
             ThermalWaves`Private`V[ThermalWaves`Private`\[CurlyTheta]], 
             ThermalWaves`Private`subN], \[FormalW] -> 
            ThermalWaves`Private`\[Omega]]; Return[{
            Association[
            "Name" -> "Pressure dominated Wave \[CurlyPhi]", "rng\[Omega]" -> 
             ThermalWaves`Private`rng\[Omega], "WaveNumbers" -> 
             Map[Part[ThermalWaves`Private`vecNs, 1] 
               ThermalWaves`Private`NSqrt\[Lambda]\[CurlyPhi]\[Omega][#]& , 
               ThermalWaves`Private`rng\[Omega]], "WaveVectors" -> 
             Map[{#/Norm[#], {0., 0., 0.}}& , 
               Map[
               ThermalWaves`Private`NV\[CurlyPhi], 
                ThermalWaves`Private`rng\[Omega]]], "parameters" -> 
             ThermalPotentials`AddToNsub[ThermalWaves`Private`subN]], 
            Association[
            "Name" -> "Thermal dominated Wave \[CurlyTheta]", "rng\[Omega]" -> 
             ThermalWaves`Private`rng\[Omega], "WaveNumbers" -> 
             Map[Part[ThermalWaves`Private`vecNs, 2] 
               ThermalWaves`Private`NSqrt\[Lambda]\[CurlyTheta]\[Omega][#]& , 
               ThermalWaves`Private`rng\[Omega]], "WaveVectors" -> 
             Map[{#/Norm[#], {0., 0., 0.}}& , 
               Map[
               ThermalWaves`Private`NV\[CurlyTheta], 
                ThermalWaves`Private`rng\[Omega]]], "parameters" -> 
             ThermalPotentials`AddToNsub[ThermalWaves`Private`subN]], 
            Association[
            "Name" -> "Shear Wave", "rng\[Omega]" -> 
             ThermalWaves`Private`rng\[Omega], "WaveNumbers" -> 
             Map[Part[ThermalWaves`Private`vecNs, 3] 
               ThermalWaves`Private`NSqrt\[Lambda]\[Psi]\[Omega][#]& , 
               ThermalWaves`Private`rng\[Omega]], "WaveVectors" -> 
             ConstantArray[{{0., 0.}, {1., 0., 0.}}, 
               Length[ThermalWaves`Private`rng\[Omega]]], "parameters" -> 
             ThermalPotentials`AddToNsub[ThermalWaves`Private`subN]]}]]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "ThermalWaves`ThermalWaves"], False]]], "Output",
 CellChangeTimes->{
  3.702378050266102*^9, {3.703242419398773*^9, 3.703242427525565*^9}, 
   3.7032432712038317`*^9, {3.703243345895628*^9, 3.703243364074341*^9}, 
   3.703243492657691*^9, 3.70324572333083*^9, 3.704189251606056*^9, {
   3.7041894276513968`*^9, 3.7041894371949263`*^9}, {3.704189650260558*^9, 
   3.704189663757421*^9}, 3.704190252875409*^9, 3.704190287284186*^9, 
   3.726474498308008*^9, {3.846761569935411*^9, 3.846761594873939*^9}, {
   3.846761767752274*^9, 3.846761794398266*^9}, 3.846766713032012*^9, 
   3.846766827618643*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"cd7945ea-58fe-4c58-b321-996ab9cd5a92"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Water", ":", " ", 
     RowBox[{"parameter", " ", "values", " ", "at", " ", "\[Theta]0"}]}], " ",
     "=", " ", 
    RowBox[{
     SuperscriptBox["25", "o"], "C"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"subN", " ", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<\[Mu]\>\"", "\[Rule]", 
        RowBox[{"1.3", " ", 
         SuperscriptBox["10", 
          RowBox[{"-", "5"}]]}]}], ",", 
       RowBox[{"\"\<\[Kappa]\>\"", "\[Rule]", "0.58"}], ",", " ", 
       RowBox[{"\"\<\[Eta]\[Mu]\>\"", "\[Rule]", " ", 
        RowBox[{"8.9", " ", 
         SuperscriptBox["10", 
          RowBox[{"-", "4"}]]}]}], ",", " ", 
       RowBox[{"\"\<\[Eta]\[Beta]\>\"", "\[Rule]", " ", 
        RowBox[{
         RowBox[{"2.47", "/", "3"}], " ", 
         SuperscriptBox["10", 
          RowBox[{"-", "3"}]]}]}], ",", 
       RowBox[{"\"\<\[Rho]\>\"", "\[Rule]", " ", "998"}], ",", 
       RowBox[{"\"\<Cv\>\"", "\[Rule]", " ", 
        RowBox[{"4.182", " ", 
         RowBox[{"10", "^", "3"}]}]}], ",", 
       RowBox[{"\"\<T0\>\"", "\[Rule]", " ", "298"}], ",", 
       RowBox[{"\"\<\[Alpha]\>\"", "\[Rule]", " ", 
        RowBox[{"2.57", " ", 
         SuperscriptBox["10", 
          RowBox[{"-", "4"}]]}]}], ",", 
       RowBox[{"\"\<\[Beta]\>\"", "\[Rule]", " ", 
        RowBox[{"2.14", " ", 
         SuperscriptBox["10", "9"]}]}], ",", 
       RowBox[{"\"\<L\>\"", "\[Rule]", " ", "1"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"subN", " ", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<\[Mu]\>\"", "\[Rule]", "0."}], ",", 
       RowBox[{"\"\<\[Kappa]\>\"", "\[Rule]", "0.58"}], ",", " ", 
       RowBox[{"\"\<\[Eta]\[Mu]\>\"", "\[Rule]", " ", 
        RowBox[{"8.9", " ", 
         SuperscriptBox["10", 
          RowBox[{"-", "4"}]]}]}], ",", " ", 
       RowBox[{"\"\<\[Eta]\[Beta]\>\"", "\[Rule]", " ", 
        RowBox[{
         RowBox[{"2.47", "/", "3"}], " ", 
         SuperscriptBox["10", 
          RowBox[{"-", "3"}]]}]}], ",", 
       RowBox[{"\"\<\[Rho]\>\"", "\[Rule]", " ", "998"}], ",", 
       RowBox[{"\"\<Cv\>\"", "\[Rule]", " ", 
        RowBox[{"4.182", " ", 
         RowBox[{"10", "^", "3"}]}]}], ",", 
       RowBox[{"\"\<T0\>\"", "\[Rule]", " ", "298"}], ",", 
       RowBox[{"\"\<\[Alpha]\>\"", "\[Rule]", " ", 
        RowBox[{"2.57", " ", 
         SuperscriptBox["10", 
          RowBox[{"-", "4"}]]}]}], ",", 
       RowBox[{"\"\<\[Beta]\>\"", "\[Rule]", " ", 
        RowBox[{"2.14", " ", 
         SuperscriptBox["10", "9"]}]}], ",", 
       RowBox[{"\"\<L\>\"", "\[Rule]", " ", "1"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"subN", " ", "=", " ", 
    RowBox[{"AddToNsub", "@", "subN"}]}]}]}]], "Input",
 CellChangeTimes->{{3.671632405384658*^9, 3.671632488371503*^9}, {
   3.671632582529538*^9, 3.6716325875138493`*^9}, {3.671632625036207*^9, 
   3.671632638403145*^9}, {3.671632695028357*^9, 3.671632766464682*^9}, {
   3.671632796986567*^9, 3.6716328195301743`*^9}, 3.671633297257812*^9, {
   3.671636373513535*^9, 3.671636514685091*^9}, {3.6716365508027563`*^9, 
   3.6716366473083487`*^9}, 3.6716368391812677`*^9, {3.671636886928454*^9, 
   3.671636972828861*^9}, {3.67163703029032*^9, 3.671637114728389*^9}, {
   3.6716371545952682`*^9, 3.6716371566476107`*^9}, {3.671637311655805*^9, 
   3.671637325346817*^9}, {3.671637685808099*^9, 3.671637698532732*^9}, 
   3.67163782087316*^9, {3.671637928595154*^9, 3.671637978536644*^9}, {
   3.671638122647625*^9, 3.671638270477036*^9}, {3.671638327251482*^9, 
   3.6716383735457773`*^9}, {3.6716384923132143`*^9, 3.6716384930081*^9}, {
   3.671704689684477*^9, 3.671704729447378*^9}, 3.671704884453126*^9, 
   3.671704946410304*^9, {3.671810798456203*^9, 3.671810798810623*^9}, {
   3.6718109825363197`*^9, 3.671810984925274*^9}, {3.671811275541978*^9, 
   3.6718112762991133`*^9}, {3.671811338770423*^9, 3.671811367244022*^9}, {
   3.6718124591116533`*^9, 3.671812474811141*^9}, {3.671812516193061*^9, 
   3.6718125318694277`*^9}, {3.688107400595813*^9, 3.688107474642775*^9}, {
   3.68810772936517*^9, 3.6881077595088873`*^9}, {3.688107821115095*^9, 
   3.6881078243790627`*^9}, {3.688107863138212*^9, 3.6881078633620453`*^9}, {
   3.688108218371337*^9, 3.68810821886615*^9}, {3.688108250841687*^9, 
   3.688108255322873*^9}, {3.688112217757018*^9, 3.6881122181253443`*^9}, {
   3.6881204074591312`*^9, 3.6881204094994307`*^9}, {3.6881204593123083`*^9, 
   3.688120462314473*^9}, {3.688120960689044*^9, 3.688120962512124*^9}, {
   3.688121512088272*^9, 3.6881215125185633`*^9}, {3.688122391598144*^9, 
   3.688122488020412*^9}, {3.68812252361978*^9, 3.68812253188267*^9}, {
   3.688122733727812*^9, 3.68812273405503*^9}, {3.688123375426963*^9, 
   3.688123375771584*^9}, {3.688127041160409*^9, 3.688127041448254*^9}, {
   3.688128060982273*^9, 3.68812806123947*^9}, 3.688128218228141*^9, {
   3.68813021623048*^9, 3.688130216423173*^9}, {3.68813026319802*^9, 
   3.688130269007423*^9}, {3.688194430365159*^9, 3.688194430660831*^9}, {
   3.68819479341393*^9, 3.6881947938321257`*^9}, {3.688194967116926*^9, 
   3.688194967377309*^9}, {3.6881978003424*^9, 3.688197803694566*^9}, {
   3.688197912660101*^9, 3.6881979128764677`*^9}, {3.68821021692877*^9, 
   3.68821022219256*^9}, {3.688210917818494*^9, 3.688210918363038*^9}, {
   3.6882109968325167`*^9, 3.688211014002185*^9}, 3.688211769696266*^9, 
   3.688296303356687*^9, {3.688296373450645*^9, 3.688296380386167*^9}, {
   3.688296437575726*^9, 3.688296451256234*^9}, {3.688301707966372*^9, 
   3.688301727609117*^9}, {3.688301766413341*^9, 3.688301768587253*^9}, {
   3.6883018307627783`*^9, 3.6883018954730453`*^9}, {3.688301975688341*^9, 
   3.688302008893167*^9}, {3.688302510970488*^9, 3.6883025282933807`*^9}, {
   3.6883025604061213`*^9, 3.688302566364711*^9}, {3.688302616580306*^9, 
   3.688302621650754*^9}, {3.6883027128020573`*^9, 3.688302718708497*^9}, {
   3.688302775954*^9, 3.6883027881538963`*^9}, {3.6884731022423363`*^9, 
   3.6884731116045303`*^9}, {3.68854425076934*^9, 3.688544251158193*^9}, {
   3.688716389703485*^9, 3.6887164224595203`*^9}, {3.688716665536924*^9, 
   3.6887166916862583`*^9}, {3.688716722956189*^9, 3.68871673312635*^9}, {
   3.6887170261244717`*^9, 3.688717060213168*^9}, {3.688717591368574*^9, 
   3.6887175970613213`*^9}, {3.688731425800234*^9, 3.688731426344818*^9}, {
   3.688736464056673*^9, 3.688736506900426*^9}, {3.6887369544871273`*^9, 
   3.688736970897703*^9}, {3.688737372040244*^9, 3.6887373746148167`*^9}, 
   3.688795649098753*^9, 3.688797611833146*^9, {3.688797783249812*^9, 
   3.6887977837857103`*^9}, {3.6887990753501177`*^9, 3.688799085332655*^9}, {
   3.688799124421945*^9, 3.688799168140212*^9}, {3.688799248713089*^9, 
   3.688799272955871*^9}, {3.688799361806724*^9, 3.688799370494388*^9}, {
   3.688812642761087*^9, 3.6888126808479967`*^9}, {3.6888196118968287`*^9, 
   3.68881961209741*^9}, {3.688834690516251*^9, 3.6888347423579397`*^9}, {
   3.688834817050041*^9, 3.688834819741499*^9}, 3.688834853681991*^9, {
   3.688898307965249*^9, 3.688898338330079*^9}, 3.688898451337726*^9, {
   3.6888987830321217`*^9, 3.688898783417297*^9}, {3.688900073907319*^9, 
   3.688900074228389*^9}, {3.688905868389319*^9, 3.688905872910047*^9}, {
   3.688906002195448*^9, 3.688906008165599*^9}, 3.68890609320291*^9, 
   3.6889088180472717`*^9, {3.688980136688398*^9, 3.68898014367383*^9}, {
   3.688980191685952*^9, 3.688980221931768*^9}, 3.689065320623089*^9, {
   3.6890654975385838`*^9, 3.6890655016854353`*^9}, {3.695388547965424*^9, 
   3.695388625212089*^9}, {3.695632634566576*^9, 3.695632651008799*^9}, {
   3.695632758693119*^9, 3.695632770428816*^9}, {3.6956328062468977`*^9, 
   3.695632806686471*^9}, {3.7023771342488747`*^9, 3.702377162605104*^9}, {
   3.7023772792016277`*^9, 3.702377310593543*^9}, {3.702377616274282*^9, 
   3.702377618129795*^9}, {3.702377902283155*^9, 3.7023779031394672`*^9}, 
   3.7023779663994503`*^9, {3.702378026168475*^9, 3.702378026456738*^9}, {
   3.703243377370146*^9, 3.703243380824872*^9}, {3.703243454319151*^9, 
   3.703243456158622*^9}, {3.703243554388255*^9, 3.7032437854808197`*^9}, {
   3.703245728658544*^9, 3.7032457682929564`*^9}, {3.704189266326212*^9, 
   3.704189266572914*^9}, 3.7041894344459352`*^9, {3.704189670111844*^9, 
   3.704189672860621*^9}},
 FontSize->16,
 CellLabel->"In[7]:=",ExpressionUUID->"8a8a4f99-e58d-45cc-b02b-8d5a4b696c7d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"\[Mu]\"\>", "\[Rule]", "0.`"}], ",", 
   RowBox[{"\<\"\[Kappa]\"\>", "\[Rule]", "0.58`"}], ",", 
   RowBox[{"\<\"\[Eta]\[Mu]\"\>", "\[Rule]", "0.0008900000000000001`"}], ",", 
   
   RowBox[{"\<\"\[Eta]\[Beta]\"\>", "\[Rule]", "0.0008233333333333334`"}], 
   ",", 
   RowBox[{"\<\"\[Rho]\"\>", "\[Rule]", "998.`"}], ",", 
   RowBox[{"\<\"Cv\"\>", "\[Rule]", "4182.`"}], ",", 
   RowBox[{"\<\"T0\"\>", "\[Rule]", "298.`"}], ",", 
   RowBox[{"\<\"\[Alpha]\"\>", "\[Rule]", "0.000257`"}], ",", 
   RowBox[{"\<\"\[Beta]\"\>", "\[Rule]", "2.1400000000000002`*^9"}], ",", 
   RowBox[{"\<\"L\"\>", "\[Rule]", "1.`"}], ",", 
   RowBox[{"\<\"Cp\"\>", "\[Rule]", "4224.205178637275`"}], ",", 
   RowBox[{"\<\"cp2\"\>", "\[Rule]", "2.165928960331895`*^6"}], ",", 
   RowBox[{"\<\"pT\"\>", "\[Rule]", "1.6389404000000003`*^8"}], ",", 
   RowBox[{"\<\"\[Gamma]\"\>", "\[Rule]", "1.0100921039304818`"}], ",", 
   RowBox[{"\<\"\[Eta]\[Lambda]\"\>", "\[Rule]", "0.00023000000000000006`"}], 
   ",", 
   RowBox[{"\<\"\[Lambda]\"\>", "\[Rule]", "2.1400000000000002`*^9"}], ",", 
   RowBox[{"\<\"LowFrequencyPressureWaveSpeed\"\>", "\[Rule]", 
    "1471.7095366721965`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.704190295159977*^9, 3.726474499932432*^9, 
  3.846761818358485*^9, 3.846766716651527*^9, 3.846766828379277*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"ea525bed-0cbb-4cff-8819-f7d52c25291b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rng\[Omega]", "=", " ", 
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", 
     RowBox[{
      SuperscriptBox["10", "5"], "/", "2"}], ",", 
     RowBox[{
      SuperscriptBox["10", "4"], "/", "4"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rng\[Omega]", "=", " ", 
    RowBox[{
     RowBox[{"Range", "[", "5", "]"}], 
     RowBox[{"10", "^", "6"}]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"rng\[Omega]", " ", "=", 
     RowBox[{"{", 
      RowBox[{"1.", ",", "2.", ",", "3."}], "}"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"rng\[Omega]", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "10"}], ",", "10", ",", 
       RowBox[{"10", "^", "3"}], ",", 
       RowBox[{"10", "^", "5"}], ",", 
       RowBox[{"10", "^", "8"}], ",", 
       RowBox[{"10", "^", "10"}]}], "}"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"precision", " ", "=", "15"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"subN", " ", "=", " ", 
   RowBox[{"SetPrecision", "[", 
    RowBox[{"subN", ",", "precision"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rng\[Omega]", " ", "=", " ", 
    RowBox[{"SetPrecision", "[", 
     RowBox[{"rng\[Omega]", ",", "precision"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "All", " ", "waves", " ", "will", " ", "use", " ", "the", " ", "same", " ",
     "wave", " ", "number"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"TW\[CurlyPhi]", ",", "TW\[CurlyTheta]", ",", "W\[Psi]"}], "}"}],
     "=", " ", 
    RowBox[{"ThermalWaves", "[", 
     RowBox[{"subN", ",", 
      RowBox[{"{", 
       RowBox[{"1.", ",", "0.", ",", "0"}], "}"}], ",", "rng\[Omega]"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Explicit", " ", "give", " ", "wave", " ", "numbers", " ", "to", " ", 
    "all", " ", "three", " ", "waves"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"TW\[CurlyPhi]", ",", "TW\[CurlyTheta]", ",", "W\[Psi]"}], 
      "}"}], "=", " ", 
     RowBox[{"ThermalWaves", "[", 
      RowBox[{"subN", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1.", ",", "0.", ",", "0."}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.", ",", "1.", ",", "0."}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.", ",", "0.", ",", "1."}], "}"}]}], "}"}], ",", 
       "rng\[Omega]"}], "]"}]}], ";"}], "*)"}], "\n"}], "\n", 
 RowBox[{"PlotTW", "[", "TW\[CurlyPhi]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotTW", "[", 
  RowBox[{"TW\[CurlyTheta]", ",", 
   RowBox[{"\"\<ReferenceTW\>\"", "->", "TW\[CurlyPhi]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotTW", "[", "W\[Psi]", "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.671632405384658*^9, 3.671632488371503*^9}, {
   3.671632582529538*^9, 3.6716325875138493`*^9}, {3.671632625036207*^9, 
   3.671632638403145*^9}, {3.671632695028357*^9, 3.671632766464682*^9}, {
   3.671632796986567*^9, 3.6716328195301743`*^9}, 3.671633297257812*^9, {
   3.671636373513535*^9, 3.671636514685091*^9}, {3.6716365508027563`*^9, 
   3.6716366473083487`*^9}, 3.6716368391812677`*^9, {3.671636886928454*^9, 
   3.671636972828861*^9}, {3.67163703029032*^9, 3.671637114728389*^9}, {
   3.6716371545952682`*^9, 3.6716371566476107`*^9}, {3.671637311655805*^9, 
   3.671637325346817*^9}, {3.671637685808099*^9, 3.671637698532732*^9}, 
   3.67163782087316*^9, {3.671637928595154*^9, 3.671637978536644*^9}, {
   3.671638122647625*^9, 3.671638270477036*^9}, {3.671638327251482*^9, 
   3.6716383735457773`*^9}, {3.6716384923132143`*^9, 3.6716384930081*^9}, {
   3.671704689684477*^9, 3.671704729447378*^9}, 3.671704884453126*^9, 
   3.671704946410304*^9, {3.671810798456203*^9, 3.671810798810623*^9}, {
   3.6718109825363197`*^9, 3.671810984925274*^9}, {3.671811275541978*^9, 
   3.6718112762991133`*^9}, {3.671811338770423*^9, 3.671811367244022*^9}, {
   3.6718124591116533`*^9, 3.671812474811141*^9}, {3.671812516193061*^9, 
   3.6718125318694277`*^9}, {3.688107400595813*^9, 3.688107474642775*^9}, {
   3.68810772936517*^9, 3.6881077595088873`*^9}, {3.688107821115095*^9, 
   3.6881078243790627`*^9}, {3.688107863138212*^9, 3.6881078633620453`*^9}, {
   3.688108218371337*^9, 3.68810821886615*^9}, {3.688108250841687*^9, 
   3.688108255322873*^9}, {3.688112217757018*^9, 3.6881122181253443`*^9}, {
   3.6881204074591312`*^9, 3.6881204094994307`*^9}, {3.6881204593123083`*^9, 
   3.688120462314473*^9}, {3.688120960689044*^9, 3.688120962512124*^9}, {
   3.688121512088272*^9, 3.6881215125185633`*^9}, {3.688122391598144*^9, 
   3.688122488020412*^9}, {3.68812252361978*^9, 3.68812253188267*^9}, {
   3.688122733727812*^9, 3.68812273405503*^9}, {3.688123375426963*^9, 
   3.688123375771584*^9}, {3.688127041160409*^9, 3.688127041448254*^9}, {
   3.688128060982273*^9, 3.68812806123947*^9}, 3.688128218228141*^9, {
   3.68813021623048*^9, 3.688130216423173*^9}, {3.68813026319802*^9, 
   3.688130269007423*^9}, {3.688194430365159*^9, 3.688194430660831*^9}, {
   3.68819479341393*^9, 3.6881947938321257`*^9}, {3.688194967116926*^9, 
   3.688194967377309*^9}, {3.6881978003424*^9, 3.688197803694566*^9}, {
   3.688197912660101*^9, 3.6881979128764677`*^9}, {3.68821021692877*^9, 
   3.68821022219256*^9}, {3.688210917818494*^9, 3.688210918363038*^9}, {
   3.6882109968325167`*^9, 3.688211014002185*^9}, 3.688211769696266*^9, 
   3.688296303356687*^9, {3.688296373450645*^9, 3.688296380386167*^9}, {
   3.688296437575726*^9, 3.688296451256234*^9}, {3.688301707966372*^9, 
   3.688301727609117*^9}, {3.688301766413341*^9, 3.688301768587253*^9}, {
   3.6883018307627783`*^9, 3.6883018954730453`*^9}, {3.688301975688341*^9, 
   3.688302008893167*^9}, {3.688302510970488*^9, 3.6883025282933807`*^9}, {
   3.6883025604061213`*^9, 3.688302566364711*^9}, {3.688302616580306*^9, 
   3.688302621650754*^9}, {3.6883027128020573`*^9, 3.688302718708497*^9}, {
   3.688302775954*^9, 3.6883027881538963`*^9}, {3.6884731022423363`*^9, 
   3.6884731116045303`*^9}, {3.68854425076934*^9, 3.688544251158193*^9}, {
   3.688716389703485*^9, 3.6887164224595203`*^9}, {3.688716665536924*^9, 
   3.6887166916862583`*^9}, {3.688716722956189*^9, 3.68871673312635*^9}, {
   3.6887170261244717`*^9, 3.688717060213168*^9}, {3.688717591368574*^9, 
   3.6887175970613213`*^9}, {3.688731425800234*^9, 3.688731426344818*^9}, {
   3.688736464056673*^9, 3.688736506900426*^9}, {3.6887369544871273`*^9, 
   3.688736970897703*^9}, {3.688737372040244*^9, 3.6887373746148167`*^9}, 
   3.688795649098753*^9, 3.688797611833146*^9, {3.688797783249812*^9, 
   3.6887977837857103`*^9}, {3.6887990753501177`*^9, 3.688799085332655*^9}, {
   3.688799124421945*^9, 3.688799168140212*^9}, {3.688799248713089*^9, 
   3.688799272955871*^9}, {3.688799361806724*^9, 3.688799370494388*^9}, {
   3.688812642761087*^9, 3.6888126808479967`*^9}, {3.6888196118968287`*^9, 
   3.68881961209741*^9}, {3.688834690516251*^9, 3.6888347423579397`*^9}, {
   3.688834817050041*^9, 3.688834819741499*^9}, 3.688834853681991*^9, {
   3.688898307965249*^9, 3.688898338330079*^9}, 3.688898451337726*^9, {
   3.6888987830321217`*^9, 3.688898783417297*^9}, {3.688900073907319*^9, 
   3.688900074228389*^9}, {3.688905868389319*^9, 3.688905872910047*^9}, {
   3.688906002195448*^9, 3.688906008165599*^9}, 3.68890609320291*^9, 
   3.6889088180472717`*^9, {3.688980136688398*^9, 3.68898014367383*^9}, {
   3.688980191685952*^9, 3.688980221931768*^9}, 3.689065320623089*^9, {
   3.6890654975385838`*^9, 3.6890655016854353`*^9}, {3.695388547965424*^9, 
   3.695388625212089*^9}, {3.695632634566576*^9, 3.695632651008799*^9}, {
   3.695632758693119*^9, 3.695632770428816*^9}, {3.6956328062468977`*^9, 
   3.695632806686471*^9}, {3.7023771342488747`*^9, 3.702377162605104*^9}, {
   3.7023772792016277`*^9, 3.702377310593543*^9}, {3.702377616274282*^9, 
   3.702377618129795*^9}, {3.702377902283155*^9, 3.7023779031394672`*^9}, 
   3.7023779663994503`*^9, {3.702378026168475*^9, 3.702378026456738*^9}, {
   3.703243377370146*^9, 3.703243380824872*^9}, {3.703243454319151*^9, 
   3.703243454815003*^9}, 3.703244139505931*^9, {3.703245788045054*^9, 
   3.703245809286838*^9}, {3.704189574225276*^9, 3.704189622966441*^9}},
 FontSize->16,
 CellLabel->"In[10]:=",ExpressionUUID->"27cb5179-23d5-4128-8245-47f8be8f47f4"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     PointSize[Large], 
     PointBox[{{0, 0}, {1.*^6, 1471.7095366721978`}, {2.*^6, 
       1471.7095366721978`}, {3.*^6, 1471.7095366721976`}, {4.*^6, 
       1471.7095366721978`}, {5.*^6, 1471.7095366721976`}}, VertexColors -> {
        GrayLevel[1], 
        RGBColor[
        0.9997853903158306, 7.90330085820301*^-8, 0.00021460968416942006`], 
        RGBColor[
        0.9999461906270395, 3.161320341060758*^-7, 0.00005380937296051158], 
        RGBColor[
        0.999975798347889, 7.112970767941817*^-7, 0.000024201652111088823`], 
        RGBColor[
        0.9999859538070057, 1.2645281365353256`*^-6, 
         0.000014046192994332518`], 
        RGBColor[
        0.9999904265715556, 1.9758252133295073`*^-6, 
         9.573428444431542*^-6]}]}, {
    Axes -> True, AspectRatio -> 1, AxesLabel -> {
       FormBox["\"\[FormalW]\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(1\\)]\\)\"", TraditionalForm]}, 
     PlotLabel -> 
     FormBox["\"Pressure dominated Wave \[CurlyPhi]\"", TraditionalForm]}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"0%\"", "\"50%\"", "\"100%\"", "\"Decay rate\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox[
               "\"\[Theta] energy flux\"", {FontFamily -> "Arial"}, 
                Background -> Automatic, StripOnInput -> False]}, {
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0., 1.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0., 1.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0., 0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0., 0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1., 0., 0.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1., 0., 0.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1., 0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1., 0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0., 0., 0.6666666666666667], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.`", ",", "1.`"}], "]"}], 
                   NumberMarks -> False]], Appearance -> None, 
                 BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0., 0., 1.], Editable -> False, Selectable -> False],
                ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0., 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0.`", ",", "0.5`"}], "]"}], 
                   NumberMarks -> False]], Appearance -> None, 
                 BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0., 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.5, 0., 0.5], Editable -> False, Selectable -> 
                False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0., 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0.6666666666666667, 0., 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "0.`", ",", "0.`"}], "]"}], 
                   NumberMarks -> False]], Appearance -> None, 
                 BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0., 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1., 0., 0.], Editable -> False, Selectable -> False],
                ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 1., 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[
                    0.33333333333333337`, 0.6666666666666667, 
                    0.33333333333333337`], FrameTicks -> None, 
                   PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "1.`", ",", "0.5`"}], "]"}], 
                   NumberMarks -> False]], Appearance -> None, 
                 BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 1., 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.5, 1., 0.5], Editable -> False, Selectable -> 
                False]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"\[Theta] energy flux\""}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.702378054235347*^9, 3.703242432043641*^9, {3.703243348261271*^9, 
   3.703243365811348*^9}, 3.703245794709221*^9, 3.704189257111937*^9, 
   3.704189674795821*^9, 3.704190299557673*^9, 3.7264745010860777`*^9, 
   3.846761821423032*^9, 3.8467667184426622`*^9, 3.846766830019532*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"316eb9a9-482a-4557-9ab7-6f54e3293bc0"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     PointSize[Large], 
     PointBox[{{0, 0}, {1.*^6, 0.5245552302317659}, {2.*^6, 
       0.7418331208075045}, {3.*^6, 0.9085563101374082}, {4.*^6, 
       1.0491104604635317`}, {5.*^6, 1.172941152751281}}, VertexColors -> {
        GrayLevel[1], 
        RGBColor[1.798932194581063*^-6, 0., 0.9999982010678055], 
        RGBColor[2.543669126568733*^-6, 0., 0.9999974563308734], 
        RGBColor[3.1152581702886486`*^-6, 0., 0.9999968847418297], 
        RGBColor[3.5971588965351465`*^-6, 0., 0.9999964028411035], 
        RGBColor[4.021733352146601*^-6, 0., 0.9999959782666479]}]}, {
    Axes -> True, AspectRatio -> 1, AxesLabel -> {
       FormBox["\"\[FormalW]\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(1\\)]\\)\"", TraditionalForm]}, 
     PlotLabel -> 
     FormBox["\"Thermal dominated Wave \[CurlyTheta]\"", TraditionalForm]}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"0%\"", "\"50%\"", "\"100%\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox[
               "\"Relative energy flux\"", {FontFamily -> "Arial"}, 
                Background -> Automatic, StripOnInput -> False]}, {
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0., 1.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0., 1.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0., 0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0., 0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1., 0., 0.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1., 0., 0.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0., 0., 0.6666666666666667], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.`", ",", "1.`"}], "]"}], 
                   NumberMarks -> False]], Appearance -> None, 
                 BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0., 0., 1.], Editable -> False, Selectable -> False],
                ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0., 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0.`", ",", "0.5`"}], "]"}], 
                   NumberMarks -> False]], Appearance -> None, 
                 BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0., 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.5, 0., 0.5], Editable -> False, Selectable -> 
                False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0., 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0.6666666666666667, 0., 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "0.`", ",", "0.`"}], "]"}], 
                   NumberMarks -> False]], Appearance -> None, 
                 BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0., 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1., 0., 0.], Editable -> False, Selectable -> False],
                ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 1., 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[
                    0.33333333333333337`, 0.6666666666666667, 
                    0.33333333333333337`], FrameTicks -> None, 
                   PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "1.`", ",", "0.5`"}], "]"}], 
                   NumberMarks -> False]], Appearance -> None, 
                 BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 1., 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.5, 1., 0.5], Editable -> False, Selectable -> 
                False]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"Relative energy flux\""}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.702378054235347*^9, 3.703242432043641*^9, {3.703243348261271*^9, 
   3.703243365811348*^9}, 3.703245794709221*^9, 3.704189257111937*^9, 
   3.704189674795821*^9, 3.704190299557673*^9, 3.7264745010860777`*^9, 
   3.846761821423032*^9, 3.8467667184426622`*^9, 3.846766830290689*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"e697aa32-84f1-4722-b559-b471b114a9e7"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     PointSize[Large], 
     PointBox[{{0, 0}, {1.*^6, 1.3355025774099192`}, {2.*^6, 
       1.8886858575573318`}, {3.*^6, 2.3131583177131674`}, {4.*^6, 
       2.6710051548198384`}, {5.*^6, 2.9862745472147547`}}, VertexColors -> {
        GrayLevel[1], 
        RGBColor[0.5, 1., 0.5], 
        RGBColor[0.5, 1., 0.5], 
        RGBColor[0.5, 1., 0.5], 
        RGBColor[0.5, 1., 0.5], 
        RGBColor[0.5, 1., 0.5]}]}, {Axes -> True, AspectRatio -> 1, AxesLabel -> {
       FormBox["\"\[FormalW]\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(1\\)]\\)\"", TraditionalForm]}, 
     PlotLabel -> FormBox["\"Shear Wave\"", TraditionalForm]}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"0%\"", "\"50%\"", "\"100%\"", "\"Decay rate\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox[
               "\"\[Theta] energy flux\"", {FontFamily -> "Arial"}, 
                Background -> Automatic, StripOnInput -> False]}, {
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0., 1.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0., 1.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0., 0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0., 0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1., 0., 0.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1., 0., 0.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1., 0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1., 0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0., 0., 0.6666666666666667], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.`", ",", "1.`"}], "]"}], 
                   NumberMarks -> False]], Appearance -> None, 
                 BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0., 0., 1.], Editable -> False, Selectable -> False],
                ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0., 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0.`", ",", "0.5`"}], "]"}], 
                   NumberMarks -> False]], Appearance -> None, 
                 BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0., 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.5, 0., 0.5], Editable -> False, Selectable -> 
                False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0., 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0.6666666666666667, 0., 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "0.`", ",", "0.`"}], "]"}], 
                   NumberMarks -> False]], Appearance -> None, 
                 BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0., 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1., 0., 0.], Editable -> False, Selectable -> False],
                ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 1., 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[
                    0.33333333333333337`, 0.6666666666666667, 
                    0.33333333333333337`], FrameTicks -> None, 
                   PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "1.`", ",", "0.5`"}], "]"}], 
                   NumberMarks -> False]], Appearance -> None, 
                 BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 1., 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.5, 1., 0.5], Editable -> False, Selectable -> 
                False]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"\[Theta] energy flux\""}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.702378054235347*^9, 3.703242432043641*^9, {3.703243348261271*^9, 
   3.703243365811348*^9}, 3.703245794709221*^9, 3.704189257111937*^9, 
   3.704189674795821*^9, 3.704190299557673*^9, 3.7264745010860777`*^9, 
   3.846761821423032*^9, 3.8467667184426622`*^9, 3.8467668304021387`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"cf6cf072-a8d6-4d42-b276-702a69475117"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"TW\[CurlyPhi]", "[", "\"\<WaveNumbers\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"TW\[CurlyTheta]", "[", "\"\<WaveNumbers\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"W\[Psi]", "[", "\"\<WaveNumbers\>\"", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.671632405384658*^9, 3.671632488371503*^9}, {
   3.671632582529538*^9, 3.6716325875138493`*^9}, {3.671632625036207*^9, 
   3.671632638403145*^9}, {3.671632695028357*^9, 3.671632766464682*^9}, {
   3.671632796986567*^9, 3.6716328195301743`*^9}, 3.671633297257812*^9, {
   3.671636373513535*^9, 3.671636514685091*^9}, {3.6716365508027563`*^9, 
   3.6716366473083487`*^9}, 3.6716368391812677`*^9, {3.671636886928454*^9, 
   3.671636972828861*^9}, {3.67163703029032*^9, 3.671637114728389*^9}, {
   3.6716371545952682`*^9, 3.6716371566476107`*^9}, {3.671637311655805*^9, 
   3.671637325346817*^9}, {3.671637685808099*^9, 3.671637698532732*^9}, 
   3.67163782087316*^9, {3.671637928595154*^9, 3.671637978536644*^9}, {
   3.671638122647625*^9, 3.671638270477036*^9}, {3.671638327251482*^9, 
   3.6716383735457773`*^9}, {3.6716384923132143`*^9, 3.6716384930081*^9}, {
   3.671704689684477*^9, 3.671704729447378*^9}, 3.671704884453126*^9, 
   3.671704946410304*^9, {3.671810798456203*^9, 3.671810798810623*^9}, {
   3.6718109825363197`*^9, 3.671810984925274*^9}, {3.671811275541978*^9, 
   3.6718112762991133`*^9}, {3.671811338770423*^9, 3.671811367244022*^9}, {
   3.6718124591116533`*^9, 3.671812474811141*^9}, {3.671812516193061*^9, 
   3.6718125318694277`*^9}, {3.688107400595813*^9, 3.688107474642775*^9}, {
   3.68810772936517*^9, 3.6881077595088873`*^9}, {3.688107821115095*^9, 
   3.6881078243790627`*^9}, {3.688107863138212*^9, 3.6881078633620453`*^9}, {
   3.688108218371337*^9, 3.68810821886615*^9}, {3.688108250841687*^9, 
   3.688108255322873*^9}, {3.688112217757018*^9, 3.6881122181253443`*^9}, {
   3.6881204074591312`*^9, 3.6881204094994307`*^9}, {3.6881204593123083`*^9, 
   3.688120462314473*^9}, {3.688120960689044*^9, 3.688120962512124*^9}, {
   3.688121512088272*^9, 3.6881215125185633`*^9}, {3.688122391598144*^9, 
   3.688122488020412*^9}, {3.68812252361978*^9, 3.68812253188267*^9}, {
   3.688122733727812*^9, 3.68812273405503*^9}, {3.688123375426963*^9, 
   3.688123375771584*^9}, {3.688127041160409*^9, 3.688127041448254*^9}, {
   3.688128060982273*^9, 3.68812806123947*^9}, 3.688128218228141*^9, {
   3.68813021623048*^9, 3.688130216423173*^9}, {3.68813026319802*^9, 
   3.688130269007423*^9}, {3.688194430365159*^9, 3.688194430660831*^9}, {
   3.68819479341393*^9, 3.6881947938321257`*^9}, {3.688194967116926*^9, 
   3.688194967377309*^9}, {3.6881978003424*^9, 3.688197803694566*^9}, {
   3.688197912660101*^9, 3.6881979128764677`*^9}, {3.68821021692877*^9, 
   3.68821022219256*^9}, {3.688210917818494*^9, 3.688210918363038*^9}, {
   3.6882109968325167`*^9, 3.688211014002185*^9}, 3.688211769696266*^9, 
   3.688296303356687*^9, {3.688296373450645*^9, 3.688296380386167*^9}, {
   3.688296437575726*^9, 3.688296451256234*^9}, {3.688301707966372*^9, 
   3.688301727609117*^9}, {3.688301766413341*^9, 3.688301768587253*^9}, {
   3.6883018307627783`*^9, 3.6883018954730453`*^9}, {3.688301975688341*^9, 
   3.688302008893167*^9}, {3.688302510970488*^9, 3.6883025282933807`*^9}, {
   3.6883025604061213`*^9, 3.688302566364711*^9}, {3.688302616580306*^9, 
   3.688302621650754*^9}, {3.6883027128020573`*^9, 3.688302718708497*^9}, {
   3.688302775954*^9, 3.6883027881538963`*^9}, {3.6884731022423363`*^9, 
   3.6884731116045303`*^9}, {3.68854425076934*^9, 3.688544251158193*^9}, {
   3.688716389703485*^9, 3.6887164224595203`*^9}, {3.688716665536924*^9, 
   3.6887166916862583`*^9}, {3.688716722956189*^9, 3.68871673312635*^9}, {
   3.6887170261244717`*^9, 3.688717060213168*^9}, {3.688717591368574*^9, 
   3.6887175970613213`*^9}, {3.688731425800234*^9, 3.688731426344818*^9}, {
   3.688736464056673*^9, 3.688736506900426*^9}, {3.6887369544871273`*^9, 
   3.688736970897703*^9}, {3.688737372040244*^9, 3.6887373746148167`*^9}, 
   3.688795649098753*^9, 3.688797611833146*^9, {3.688797783249812*^9, 
   3.6887977837857103`*^9}, {3.6887990753501177`*^9, 3.688799085332655*^9}, {
   3.688799124421945*^9, 3.688799168140212*^9}, {3.688799248713089*^9, 
   3.688799272955871*^9}, {3.688799361806724*^9, 3.688799370494388*^9}, {
   3.688812642761087*^9, 3.6888126808479967`*^9}, {3.6888196118968287`*^9, 
   3.68881961209741*^9}, {3.688834690516251*^9, 3.6888347423579397`*^9}, {
   3.688834817050041*^9, 3.688834819741499*^9}, 3.688834853681991*^9, {
   3.688898307965249*^9, 3.688898338330079*^9}, 3.688898451337726*^9, {
   3.6888987830321217`*^9, 3.688898783417297*^9}, {3.688900073907319*^9, 
   3.688900074228389*^9}, {3.688905868389319*^9, 3.688905872910047*^9}, {
   3.688906002195448*^9, 3.688906008165599*^9}, 3.68890609320291*^9, 
   3.6889088180472717`*^9, {3.688980136688398*^9, 3.68898014367383*^9}, {
   3.688980191685952*^9, 3.688980221931768*^9}, 3.689065320623089*^9, {
   3.6890654975385838`*^9, 3.6890655016854353`*^9}, {3.695388547965424*^9, 
   3.695388625212089*^9}, {3.6953886577273703`*^9, 3.695388664016717*^9}, {
   3.695388825795206*^9, 3.695388829193302*^9}, 3.704189576510531*^9, 
   3.7041896129335747`*^9, 3.846766840389699*^9},
 FontSize->16,
 CellLabel->"In[19]:=",ExpressionUUID->"f343db25-9ba2-432b-abfb-c076514871e2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"679.481905282194`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.0003161320341295402`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1358.963810564388`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.0012645281365181607`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2038.4457158465823`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.0028451883071658616`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2717.927621128776`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.005058112546072643`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"3397.4095264109706`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.007903300853238504`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.688980216939864*^9, 3.688980222748109*^9}, 
   3.689065332818845*^9, 3.6890655038170652`*^9, 3.689401086586028*^9, 
   3.6894031645989523`*^9, 3.694937602250882*^9, 3.6949409269433126`*^9, 
   3.6949415197088137`*^9, 3.6949418724443693`*^9, 3.694942468283216*^9, {
   3.6953885950757627`*^9, 3.695388632254925*^9}, 3.69538866479858*^9, 
   3.695388829823358*^9, 3.695402895597343*^9, {3.703246013213809*^9, 
   3.703246015779657*^9}, 3.8467618312599287`*^9, 3.846766723695808*^9, 
   3.846766840778742*^9},
 FontSize->16,
 CellLabel->"Out[19]=",ExpressionUUID->"f93d3494-6cf7-4c72-b17b-872d02ef01e7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1.9063769501605523`*^6", "+", 
      RowBox[{"1.9063769501605523`*^6", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2.696024137912511`*^6", "+", 
      RowBox[{"2.696024137912511`*^6", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"3.301941736056278`*^6", "+", 
      RowBox[{"3.301941736056278`*^6", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"3.8127539003211046`*^6", "+", 
      RowBox[{"3.8127539003211046`*^6", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"4.262788451297724`*^6", "+", 
      RowBox[{"4.262788451297724`*^6", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.688980216939864*^9, 3.688980222748109*^9}, 
   3.689065332818845*^9, 3.6890655038170652`*^9, 3.689401086586028*^9, 
   3.6894031645989523`*^9, 3.694937602250882*^9, 3.6949409269433126`*^9, 
   3.6949415197088137`*^9, 3.6949418724443693`*^9, 3.694942468283216*^9, {
   3.6953885950757627`*^9, 3.695388632254925*^9}, 3.69538866479858*^9, 
   3.695388829823358*^9, 3.695402895597343*^9, {3.703246013213809*^9, 
   3.703246015779657*^9}, 3.8467618312599287`*^9, 3.846766723695808*^9, 
   3.846766840784371*^9},
 FontSize->16,
 CellLabel->"Out[20]=",ExpressionUUID->"894a37a2-742f-41a2-a82e-c5cd1bcff36a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"748781.7821657861`", "\[VeryThinSpace]", "+", 
      RowBox[{"748781.7821657861`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1.0589373515967513`*^6", "+", 
      RowBox[{"1.0589373515967513`*^6", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1.296928090493113`*^6", "+", 
      RowBox[{"1.296928090493113`*^6", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1.4975635643315723`*^6", "+", 
      RowBox[{"1.4975635643315723`*^6", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1.6743269652361374`*^6", "+", 
      RowBox[{"1.6743269652361374`*^6", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.688980216939864*^9, 3.688980222748109*^9}, 
   3.689065332818845*^9, 3.6890655038170652`*^9, 3.689401086586028*^9, 
   3.6894031645989523`*^9, 3.694937602250882*^9, 3.6949409269433126`*^9, 
   3.6949415197088137`*^9, 3.6949418724443693`*^9, 3.694942468283216*^9, {
   3.6953885950757627`*^9, 3.695388632254925*^9}, 3.69538866479858*^9, 
   3.695388829823358*^9, 3.695402895597343*^9, {3.703246013213809*^9, 
   3.703246015779657*^9}, 3.8467618312599287`*^9, 3.846766723695808*^9, 
   3.846766840789412*^9},
 FontSize->16,
 CellLabel->"Out[21]=",ExpressionUUID->"4e281d67-4530-48f6-ad4f-d33a08c99bd8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Other", " ", "functions"}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"?", "StressTW"}], "\[IndentingNewLine]", 
   RowBox[{"?", "DisplacementTW"}], "\[IndentingNewLine]", 
   RowBox[{"?", "EnergyFluxTW"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"X", "=", " ", 
     RowBox[{"{", 
      RowBox[{"0.", ",", "0.", ",", " ", "0."}], "}"}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vecK", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"1.", ",", "1.", ",", " ", "1."}], "}"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"wave", " ", "direction"}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"u", " ", "=", "  ", 
     RowBox[{"DisplacementTW", "[", 
      RowBox[{"TW\[CurlyPhi]", ",", "X"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"v", " ", "=", " ", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "rng\[Omega]", " ", "u"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Sigma]", " ", "=", " ", 
     RowBox[{"StressTW", "[", 
      RowBox[{"TW\[CurlyPhi]", ",", "X"}], "]"}]}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "2"]}], 
    RowBox[{"Re", "@", 
     RowBox[{"MapThread", "[", 
      RowBox[{"Dot", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"v", "\[Conjugate]"}], ",", "\[Sigma]"}], "}"}]}], "]"}]}]}],
    " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Energy", " ", "Flux"}], ",", " ", 
     RowBox[{
     "which", " ", "is", " ", "used", " ", "to", " ", "color", " ", "the", 
      " ", "plots", " ", "above"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Short", " ", "hand"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"EnergyFluxTW", "[", "TW\[CurlyPhi]", "]"}], " ", 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.671632405384658*^9, 3.671632488371503*^9}, {
   3.671632582529538*^9, 3.6716325875138493`*^9}, {3.671632625036207*^9, 
   3.671632638403145*^9}, {3.671632695028357*^9, 3.671632766464682*^9}, {
   3.671632796986567*^9, 3.6716328195301743`*^9}, 3.671633297257812*^9, {
   3.671636373513535*^9, 3.671636514685091*^9}, {3.6716365508027563`*^9, 
   3.6716366473083487`*^9}, 3.6716368391812677`*^9, {3.671636886928454*^9, 
   3.671636972828861*^9}, {3.67163703029032*^9, 3.671637114728389*^9}, {
   3.6716371545952682`*^9, 3.6716371566476107`*^9}, {3.671637311655805*^9, 
   3.671637325346817*^9}, {3.671637685808099*^9, 3.671637698532732*^9}, 
   3.67163782087316*^9, {3.671637928595154*^9, 3.671637978536644*^9}, {
   3.671638122647625*^9, 3.671638270477036*^9}, {3.671638327251482*^9, 
   3.6716383735457773`*^9}, {3.6716384923132143`*^9, 3.6716384930081*^9}, {
   3.671704689684477*^9, 3.671704729447378*^9}, 3.671704884453126*^9, 
   3.671704946410304*^9, {3.671810798456203*^9, 3.671810798810623*^9}, {
   3.6718109825363197`*^9, 3.671810984925274*^9}, {3.671811275541978*^9, 
   3.6718112762991133`*^9}, {3.671811338770423*^9, 3.671811367244022*^9}, {
   3.6718124591116533`*^9, 3.671812474811141*^9}, {3.671812516193061*^9, 
   3.6718125318694277`*^9}, {3.688107400595813*^9, 3.688107474642775*^9}, {
   3.68810772936517*^9, 3.6881077595088873`*^9}, {3.688107821115095*^9, 
   3.6881078243790627`*^9}, {3.688107863138212*^9, 3.6881078633620453`*^9}, {
   3.688108218371337*^9, 3.68810821886615*^9}, {3.688108250841687*^9, 
   3.688108255322873*^9}, {3.688112217757018*^9, 3.6881122181253443`*^9}, {
   3.6881204074591312`*^9, 3.6881204094994307`*^9}, {3.6881204593123083`*^9, 
   3.688120462314473*^9}, {3.688120960689044*^9, 3.688120962512124*^9}, {
   3.688121512088272*^9, 3.6881215125185633`*^9}, {3.688122391598144*^9, 
   3.688122488020412*^9}, {3.68812252361978*^9, 3.68812253188267*^9}, {
   3.688122733727812*^9, 3.68812273405503*^9}, {3.688123375426963*^9, 
   3.688123375771584*^9}, {3.688127041160409*^9, 3.688127041448254*^9}, {
   3.688128060982273*^9, 3.68812806123947*^9}, 3.688128218228141*^9, {
   3.68813021623048*^9, 3.68813025268583*^9}, {3.6881303558518467`*^9, 
   3.688130368820593*^9}, {3.688130726053857*^9, 3.688130747724962*^9}, 
   3.688131119181849*^9, {3.6881311701327868`*^9, 3.6881312086039057`*^9}, {
   3.688197882525567*^9, 3.688197882788361*^9}, {3.6882073859106417`*^9, 
   3.688207447404871*^9}, {3.68820762660888*^9, 3.688207648088531*^9}, {
   3.68820822869209*^9, 3.6882082693947697`*^9}, {3.6882092354140472`*^9, 
   3.6882092385023518`*^9}, {3.688209314092808*^9, 3.688209330444083*^9}, {
   3.6882098763362007`*^9, 3.688210034477167*^9}, {3.688210254968296*^9, 
   3.6882103775253897`*^9}, {3.6882110297911167`*^9, 3.688211032023164*^9}, {
   3.688211311425139*^9, 3.688211335744747*^9}, {3.688211639891337*^9, 
   3.688211734960566*^9}, {3.688211884838574*^9, 3.688211971588315*^9}, {
   3.688212068930586*^9, 3.688212128624915*^9}, {3.6882123285652637`*^9, 
   3.688212329044958*^9}, {3.688213281605575*^9, 3.688213284696478*^9}, {
   3.6882133839112587`*^9, 3.688213393767045*^9}, {3.688213462711001*^9, 
   3.6882134680957537`*^9}, {3.688213572958934*^9, 3.688213573107531*^9}, {
   3.6882961930273943`*^9, 3.688296212222069*^9}, {3.6883033170839653`*^9, 
   3.6883034348823566`*^9}, {3.688303471242449*^9, 3.688303534391802*^9}, {
   3.6883047405496407`*^9, 3.688304744637706*^9}, {3.688473128959948*^9, 
   3.688473245967194*^9}, 3.68871765136681*^9, {3.688731803594975*^9, 
   3.688731803858301*^9}, {3.688734195086507*^9, 3.68873421090462*^9}, {
   3.688734279259897*^9, 3.6887342842622757`*^9}, {3.6887343469156313`*^9, 
   3.688734347377968*^9}, {3.68873470499559*^9, 3.688734708422346*^9}, {
   3.6889000890749483`*^9, 3.688900089370975*^9}, {3.688906205766777*^9, 
   3.688906206294799*^9}, {3.704189613839251*^9, 3.704189615341012*^9}, 
   3.8467667332552*^9},
 FontSize->16,
 CellLabel->"In[22]:=",ExpressionUUID->"af4b6260-1d45-4704-a51e-dcdd6f83f148"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"StressTW[thermalWave, vecX] gives the Cauchy stress \
at vecX from the origin of the plane wave.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"StressTW", "[", 
                    
                    RowBox[{
                    "ThermalWaves`Private`thermalWave_", ",", 
                    "ThermalWaves`Private`vectorX_"}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ThermalWaves`Private`vecX", "=", 
                    
                    RowBox[{"ThermalWaves`Private`vec3D", "[", 
                    "ThermalWaves`Private`vectorX", "]"}]}], ",", 
                    RowBox[{"ThermalWaves`Private`subN", "=", 
                    
                    RowBox[{"ThermalWaves`Private`thermalWave", "[", 
                    "\"parameters\"", "]"}]}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"ThermalWaves`Private`vecX", ".", 
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"IdentityMatrix", "[", "3", "]"}]}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\"\[Lambda]\"", "-", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], " ", "\"\[Eta]\[Lambda]\""}]}],
                     ")"}], " ", 
                    RowBox[{"#1", "\[LeftDoubleBracket]", 
                    RowBox[{"3", ",", "1", ",", "1"}], 
                    "\[RightDoubleBracket]"}]}], "-", 
                    RowBox[{"\"pT\"", " ", 
                    RowBox[{"#1", "\[LeftDoubleBracket]", 
                    RowBox[{"3", ",", "1", ",", "2"}], 
                    "\[RightDoubleBracket]"}]}]}], "/.", "\[VeryThinSpace]", 
                    "ThermalWaves`Private`subN"}], ")"}]}], "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\"\[Mu]\"", "-", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], " ", "\"\[Eta]\[Mu]\""}]}], 
                    "/.", "\[VeryThinSpace]", "ThermalWaves`Private`subN"}], 
                    ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"KroneckerProduct", "[", 
                    RowBox[{
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", 
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], " ", 
                    RowBox[{"#1", "\[LeftDoubleBracket]", 
                    RowBox[{"3", ",", "1", ",", "1"}], 
                    "\[RightDoubleBracket]"}]}], "+", 
                    RowBox[{"KroneckerProduct", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "\[Cross]", 
                    RowBox[{"#1", "\[LeftDoubleBracket]", 
                    RowBox[{"3", ",", "2"}], "\[RightDoubleBracket]"}]}], ",", 
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], "+", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"KroneckerProduct", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "\[Cross]", 
                    RowBox[{"#1", "\[LeftDoubleBracket]", 
                    RowBox[{"3", ",", "2"}], "\[RightDoubleBracket]"}]}], ",", 
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], "]"}]}], ")"}]}]}], 
                    ")"}]}], "&"}], ")"}], "/@", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"ThermalWaves`Private`thermalWave", "[", 
                    "\"rng\[Omega]\"", "]"}], ",", 
                    
                    RowBox[{"ThermalWaves`Private`thermalWave", "[", 
                    "\"WaveNumbers\"", "]"}], ",", 
                    
                    RowBox[{"ThermalWaves`Private`thermalWave", "[", 
                    "\"WaveVectors\"", "]"}]}], "}"}], "]"}]}]}], "]"}]}]}, {
                   " "}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ThermalWaves`StressTW\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"StressTW[thermalWave, vecX] gives the Cauchy stress \
at vecX from the origin of the plane wave.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {4., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {4., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "StressTW[thermalWave, vecX] gives the Cauchy stress at vecX from the \
origin of the plane wave.", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ThermalWaves`StressTW, {ThermalWaves`StressTW[
         Pattern[ThermalWaves`Private`thermalWave, 
          Blank[]], 
         Pattern[ThermalWaves`Private`vectorX, 
          Blank[]]] :> 
       Module[{ThermalWaves`Private`vecX = 
          ThermalWaves`Private`vec3D[ThermalWaves`Private`vectorX], 
          ThermalWaves`Private`subN = 
          ThermalWaves`Private`thermalWave["parameters"]}, 
         Map[E^(I Dot[ThermalWaves`Private`vecX, 
              Part[#, 2]]) ((-IdentityMatrix[3]) 
            ReplaceAll[("\[Lambda]" - I Part[#, 1] "\[Eta]\[Lambda]") 
               Part[#, 3, 1, 1] - "pT" Part[#, 3, 1, 2], 
              ThermalWaves`Private`subN] - 
           ReplaceAll[
            "\[Mu]" - I Part[#, 1] "\[Eta]\[Mu]", ThermalWaves`Private`subN] (
            2 KroneckerProduct[
               Part[#, 2], 
               Part[#, 2]] Part[#, 3, 1, 1] + KroneckerProduct[
              Cross[
               Part[#, 2], 
               Part[#, 3, 2]], 
              Part[#, 2]] + Transpose[
              KroneckerProduct[
               Cross[
                Part[#, 2], 
                Part[#, 3, 2]], 
               Part[#, 2]]]))& , 
          Transpose[{
            ThermalWaves`Private`thermalWave["rng\[Omega]"], 
            ThermalWaves`Private`thermalWave["WaveNumbers"], 
            ThermalWaves`Private`thermalWave["WaveVectors"]}]]]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "ThermalWaves`StressTW"], False]]], "Output",
 CellChangeTimes->{3.6889000939717913`*^9, 3.694937611435796*^9, 
  3.694942471511524*^9, 3.703246017677055*^9, 3.704189698049547*^9, 
  3.846761834217198*^9, 3.846766733785756*^9, 3.846766844650189*^9},
 FontSize->16,
 CellLabel->"Out[22]=",ExpressionUUID->"9b81b68c-2b7d-4438-93bd-d9093f2a4193"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DisplacementTW[thermalWave, vecX]\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"DisplacementTW", "[", 
                    
                    RowBox[{
                    "ThermalWaves`Private`thermalWave_", ",", 
                    "ThermalWaves`Private`vectorX_"}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"ThermalWaves`Private`vecX", "=", 
                    
                    RowBox[{"ThermalWaves`Private`vec3D", "[", 
                    "ThermalWaves`Private`vectorX", "]"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[ImaginaryI]", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"ThermalWaves`Private`vecX", ".", 
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], " ", 
                    RowBox[{"#1", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1", ",", "1"}], 
                    "\[RightDoubleBracket]"}]}], "+", 
                    RowBox[{
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[Cross]", 
                    RowBox[{"#1", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}]}], 
                    ")"}]}], "&"}], ")"}], "/@", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"ThermalWaves`Private`thermalWave", "[", 
                    "\"WaveNumbers\"", "]"}], ",", 
                    
                    RowBox[{"ThermalWaves`Private`thermalWave", "[", 
                    "\"WaveVectors\"", "]"}]}], "}"}], "]"}]}]}], "]"}]}]}, {
                   " "}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ThermalWaves`DisplacementTW\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DisplacementTW[thermalWave, vecX]\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {4., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {4., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> "DisplacementTW[thermalWave, vecX]", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ThermalWaves`DisplacementTW, {ThermalWaves`DisplacementTW[
         Pattern[ThermalWaves`Private`thermalWave, 
          Blank[]], 
         Pattern[ThermalWaves`Private`vectorX, 
          Blank[]]] :> 
       Module[{ThermalWaves`Private`vecX = 
          ThermalWaves`Private`vec3D[ThermalWaves`Private`vectorX]}, 
         Map[I E^(I Dot[ThermalWaves`Private`vecX, 
              Part[#, 1]]) (Part[#, 1] Part[#, 2, 1, 1] + Cross[
             Part[#, 1], 
             Part[#, 2, 2]])& , 
          Transpose[{
            ThermalWaves`Private`thermalWave["WaveNumbers"], 
            ThermalWaves`Private`thermalWave["WaveVectors"]}]]]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "ThermalWaves`DisplacementTW"], False]]], "Output",
 CellChangeTimes->{3.6889000939717913`*^9, 3.694937611435796*^9, 
  3.694942471511524*^9, 3.703246017677055*^9, 3.704189698049547*^9, 
  3.846761834217198*^9, 3.846766733785756*^9, 3.84676684470048*^9},
 FontSize->16,
 CellLabel->"Out[23]=",ExpressionUUID->"7520e6c8-abc1-423a-818d-819a921fc97a"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"EnergyFluxTW[thermalWave]\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"EnergyFluxTW", "[", 
                    RowBox[{"ThermalWaves`Private`thermalWave_", ",", 
                    RowBox[{"ThermalWaves`Private`vecX_", ":", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}]}]}], "]"}],
                     ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"ThermalWaves`Private`v", "=", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", 
                    
                    RowBox[{"ThermalWaves`Private`thermalWave", "[", 
                    "\"rng\[Omega]\"", "]"}], " ", 
                    RowBox[{"DisplacementTW", "[", 
                    
                    RowBox[{"ThermalWaves`Private`thermalWave", ",", 
                    "ThermalWaves`Private`vecX"}], "]"}]}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "0.5`"}], " ", 
                    RowBox[{"Re", "[", 
                    RowBox[{"MapThread", "[", 
                    RowBox[{"Dot", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Conjugate", "[", "ThermalWaves`Private`v", "]"}],
                     ",", "#1"}], "}"}]}], "]"}], "]"}]}], "&"}], ")"}], "[", 
                    
                    RowBox[{"StressTW", "[", 
                    RowBox[{"ThermalWaves`Private`thermalWave", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}]}], "]"}], 
                    "]"}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ThermalWaves`EnergyFluxTW\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"EnergyFluxTW[thermalWave]\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {4., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {4., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> "EnergyFluxTW[thermalWave]", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ThermalWaves`EnergyFluxTW, {ThermalWaves`EnergyFluxTW[
         Pattern[ThermalWaves`Private`thermalWave, 
          Blank[]], 
         Optional[
          Pattern[ThermalWaves`Private`vecX, 
           Blank[]], {0., 0., 0.}]] :> 
       Module[{ThermalWaves`Private`v = (-I) 
           ThermalWaves`Private`thermalWave["rng\[Omega]"] 
           ThermalWaves`DisplacementTW[
            ThermalWaves`Private`thermalWave, ThermalWaves`Private`vecX]}, 
         ((-0.5) Re[
           MapThread[Dot, {
             Conjugate[ThermalWaves`Private`v], #}]]& )[
          ThermalWaves`StressTW[
          ThermalWaves`Private`thermalWave, {0., 0., 0.}]]]}], "SubValues" -> 
    None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "ThermalWaves`EnergyFluxTW"], False]]], "Output",
 CellChangeTimes->{3.6889000939717913`*^9, 3.694937611435796*^9, 
  3.694942471511524*^9, 3.703246017677055*^9, 3.704189698049547*^9, 
  3.846761834217198*^9, 3.846766733785756*^9, 3.846766844748979*^9},
 FontSize->16,
 CellLabel->"Out[24]=",ExpressionUUID->"e27f2447-fb05-4e6e-94e7-37d90a0f1ae2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "9.150181855652881`*^11"}], ",", "0.`", ",", "0.`"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "9.151655007779283`*^11"}], ",", "0.`", ",", "0.`"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "9.151927814499703`*^11"}], ",", "0.`", ",", "0.`"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "9.152023298100636`*^11"}], ",", "0.`", ",", "0.`"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "9.152067494758221`*^11"}], ",", "0.`", ",", "0.`"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6889000939717913`*^9, 3.694937611435796*^9, 
  3.694942471511524*^9, 3.703246017677055*^9, 3.704189698049547*^9, 
  3.846761834217198*^9, 3.846766733785756*^9, 3.846766844752784*^9},
 FontSize->16,
 CellLabel->"Out[30]=",ExpressionUUID->"5cfa1a0e-1fd0-4a09-8e5f-49908a0f6e8b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Wave reflection and transmission", "Subsection",
 CellChangeTimes->{{3.688734714884158*^9, 3.6887347463441963`*^9}, {
  3.688745999239914*^9, 3.688746002724772*^9}},
 FontSize->16,ExpressionUUID->"c538573e-5d09-4eb4-bb0b-20ff8921c05e"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Below", " ", "we", " ", "use", " ", "the", " ", "function", " ", 
     "ScatteredTW"}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"here", " ", "is", " ", "how", " ", "it", " ", 
       RowBox[{"works", ":", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"TWRs", ",", "TWTs"}], "}"}]}]}], "=", " ", 
      RowBox[{"ScatteredTW", "[", 
       RowBox[{"TWin", ",", "TWs", ",", "TW2s", ",", "opts"}], "]"}]}], ";", 
     " ", "\[IndentingNewLine]", " ", 
     RowBox[{
     "where", " ", "TWin", " ", "is", " ", "the", " ", "incident", " ", 
      "wave"}]}], ",", " ", 
    RowBox[{
     RowBox[{"ex", ":", " ", "TWin"}], " ", "=", " ", "TW\[CurlyPhi]"}], ",", 
    " ", 
    RowBox[{"the", " ", "wavenumbers", " ", "given", " ", "by", " ", 
     RowBox[{"TWin", "[", "\"\<WaveNumbers\>\"", "]"}], " ", "determine", " ",
      "the", " ", "direction", " ", "of", " ", "the", " ", "incident", " ", 
     "wave"}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"TWin", "[", "\"\<WaveNumbers\>\"", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], " ", "is", " ", "the", " ", "p"}], 
      "-", 
      RowBox[{"wavenumber", " ", "vector", " ", "and", " ", 
       RowBox[{
        RowBox[{"TWin", "[", "\"\<WaveNumbers\>\"", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], " ", "is", " ", "the", " ", "shear"}],
       "-", 
      RowBox[{"wavenumber", " ", "vector"}]}], ";", 
     RowBox[{
      RowBox[{
      "TWs", " ", "is", " ", "a", " ", "list", " ", "with", " ", "of", " ", 
       "the", " ", "form", " ", "TWs"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"TW\[CurlyPhi]", ",", "TW\[CurlyTheta]", ",", "W\[Psi]"}], 
        "}"}], " ", "where", " ", "each", " ", "of", " ", "there", " ", 
       "have", " ", "the", " ", "wavenumber", " ", "and", " ", "wavevectors", 
       " ", "of", " ", "the", " ", "top", " ", "material", " ", 
       RowBox[{"(", 
        RowBox[{
        "where", " ", "the", " ", "incident", " ", "wave", " ", "travels"}], 
        ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
      "TW2s", " ", "is", " ", "a", " ", "list", " ", "with", " ", "of", " ", 
       "the", " ", "form", " ", "TW2s"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"TW2\[CurlyPhi]", ",", "TW2\[CurlyTheta]", ",", "W2\[Psi]"}], 
        "}"}], " ", "where", " ", "each", " ", "of", " ", "these", " ", 
       "have", " ", "the", " ", "wavenumber", " ", "and", " ", "wavevectors", 
       " ", "of", " ", "the", " ", "bottom", " ", "material", " ", "where", 
       " ", "waves", " ", "are", " ", "transmitted"}]}], ";", 
     "\[IndentingNewLine]", " ", 
     RowBox[{
     "TWRs", " ", "and", " ", "TWTs", " ", "are", " ", "similar", " ", 
      "lists"}]}], ",", " ", 
    RowBox[{
     RowBox[{
     "but", " ", "now", " ", "have", " ", "the", " ", "correct", " ", 
      "wavenumber", " ", "and", " ", "wavevectors", " ", "to", " ", "satisfy",
       " ", "scattering", " ", "from", " ", "the", " ", "surface", " ", "z"}],
      "=", "0."}]}], "   ", "\[IndentingNewLine]", "*)"}], "\n", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "parameters", " ", "for", " ", "the", " ", "incident", " ", "medium"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"subN", " ", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<\[Mu]\>\"", "\[Rule]", 
        RowBox[{"1.3", " ", 
         SuperscriptBox["10", 
          RowBox[{"-", "5"}]]}]}], ",", 
       RowBox[{"\"\<\[Kappa]\>\"", "\[Rule]", "0.58"}], ",", " ", 
       RowBox[{"\"\<\[Eta]\[Mu]\>\"", "\[Rule]", " ", 
        RowBox[{"8.9", " ", 
         SuperscriptBox["10", 
          RowBox[{"-", "4"}]]}]}], ",", " ", 
       RowBox[{"\"\<\[Eta]\[Beta]\>\"", "\[Rule]", " ", 
        RowBox[{
         RowBox[{"2.47", "/", "3"}], " ", 
         SuperscriptBox["10", 
          RowBox[{"-", "3"}]]}]}], ",", 
       RowBox[{"\"\<\[Rho]\>\"", "\[Rule]", " ", "998"}], ",", 
       RowBox[{"\"\<Cv\>\"", "\[Rule]", " ", 
        RowBox[{"4.182", " ", 
         RowBox[{"10", "^", "3"}]}]}], ",", 
       RowBox[{"\"\<T0\>\"", "\[Rule]", " ", "298"}], ",", 
       RowBox[{"\"\<\[Alpha]\>\"", "\[Rule]", " ", 
        RowBox[{"2.57", " ", 
         SuperscriptBox["10", 
          RowBox[{"-", "4"}]]}]}], ",", 
       RowBox[{"\"\<\[Beta]\>\"", "\[Rule]", " ", 
        RowBox[{"2.14", " ", 
         SuperscriptBox["10", "9"]}]}], ",", 
       RowBox[{"\"\<L\>\"", "\[Rule]", " ", "1"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", " ", 
   RowBox[{
    RowBox[{"subN", "=", 
     RowBox[{"AddToNsub", "@", "subN"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "parameters", " ", "for", " ", "the", " ", "transmitting", " ", 
     "medium"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"subNT", " ", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<\[Mu]\>\"", "\[Rule]", 
        RowBox[{"4.3", " ", 
         SuperscriptBox["10", 
          RowBox[{"-", "5"}]]}]}], ",", 
       RowBox[{"\"\<\[Kappa]\>\"", "\[Rule]", "1.08"}], ",", " ", 
       RowBox[{"\"\<\[Eta]\[Mu]\>\"", "\[Rule]", " ", 
        RowBox[{"8.9", " ", 
         SuperscriptBox["10", 
          RowBox[{"-", "5"}]]}]}], ",", " ", 
       RowBox[{"\"\<\[Eta]\[Beta]\>\"", "\[Rule]", " ", 
        RowBox[{
         RowBox[{"2.47", "/", "3"}], " ", 
         SuperscriptBox["10", 
          RowBox[{"-", "4"}]]}]}], ",", 
       RowBox[{"\"\<\[Rho]\>\"", "\[Rule]", " ", "698"}], ",", 
       RowBox[{"\"\<Cv\>\"", "\[Rule]", " ", 
        RowBox[{"10.182", " ", 
         RowBox[{"10", "^", "3"}]}]}], ",", 
       RowBox[{"\"\<T0\>\"", "\[Rule]", " ", "298"}], ",", 
       RowBox[{"\"\<\[Alpha]\>\"", "\[Rule]", " ", 
        RowBox[{"6.57", " ", 
         SuperscriptBox["10", 
          RowBox[{"-", "4"}]]}]}], ",", 
       RowBox[{"\"\<\[Beta]\>\"", "\[Rule]", " ", 
        RowBox[{"2.14", " ", 
         SuperscriptBox["10", "10"]}]}], ",", 
       RowBox[{"\"\<L\>\"", "\[Rule]", " ", "1"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"subNT", " ", "=", 
     RowBox[{"AddToNsub", "@", "subNT"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.688813151735238*^9, 3.6888132304746943`*^9}, {
   3.688813275888927*^9, 3.688813493965633*^9}, {3.6888135281148853`*^9, 
   3.6888136265301027`*^9}, {3.688813770425427*^9, 3.68881377089213*^9}, {
   3.6888139704887867`*^9, 3.688814063236496*^9}, {3.6888141060018997`*^9, 
   3.688814109372991*^9}, {3.688814142865696*^9, 3.688814169356093*^9}, {
   3.688814292546324*^9, 3.688814385292364*^9}, {3.6888152157550297`*^9, 
   3.688815217895599*^9}, {3.688815293746689*^9, 3.688815405103827*^9}, {
   3.688815435829927*^9, 3.688815464757306*^9}, {3.6888155083642797`*^9, 
   3.6888155577081413`*^9}, {3.6888156811122313`*^9, 3.688815693223674*^9}, {
   3.688815748103005*^9, 3.688815761406006*^9}, {3.688815815294084*^9, 
   3.688815918690905*^9}, {3.6888176019883127`*^9, 3.688817829459708*^9}, {
   3.6888178757866077`*^9, 3.6888179794885178`*^9}, {3.6888180448822517`*^9, 
   3.6888180597426443`*^9}, {3.688818422006542*^9, 3.688818604099429*^9}, {
   3.688818666299725*^9, 3.688818828895919*^9}, 3.688818878040634*^9, {
   3.688818912326524*^9, 3.688818992301901*^9}, {3.688819064498892*^9, 
   3.6888191040268517`*^9}, {3.68881918313656*^9, 3.6888192093289433`*^9}, {
   3.688819322030842*^9, 3.688819332095045*^9}, {3.68881939014211*^9, 
   3.688819429575006*^9}, {3.688819497691948*^9, 3.688819508924881*^9}, {
   3.688819726872404*^9, 3.688819763278919*^9}, {3.688819797257106*^9, 
   3.6888198446685*^9}, 3.688819901950597*^9, {3.688820083616193*^9, 
   3.688820234844446*^9}, {3.688820290595459*^9, 3.6888203489949408`*^9}, {
   3.688820502208613*^9, 3.688820505531157*^9}, {3.688835025718473*^9, 
   3.6888350848516417`*^9}, {3.6888351562926893`*^9, 3.688835187686912*^9}, {
   3.688835238023254*^9, 3.6888352415757837`*^9}, 3.688835317275112*^9, {
   3.688835372412174*^9, 3.68883538666332*^9}, 3.6888354363483458`*^9, {
   3.6888355666117563`*^9, 3.688835567344989*^9}, {3.688835641410181*^9, 
   3.688835775105563*^9}, {3.6888370924721737`*^9, 3.688837100504727*^9}, {
   3.688837291670927*^9, 3.688837292087432*^9}, {3.688837586455811*^9, 
   3.6888375866367617`*^9}, 3.68883762616547*^9, {3.6888379413255444`*^9, 
   3.688837941854841*^9}, {3.688839402924694*^9, 3.688839407332652*^9}, {
   3.688841949238365*^9, 3.6888419693902063`*^9}, {3.68884201952892*^9, 
   3.688842048794979*^9}, {3.6888857620595083`*^9, 3.688885792387211*^9}, {
   3.688888021881576*^9, 3.6888880280210533`*^9}, {3.688888166605959*^9, 
   3.6888881701339207`*^9}, {3.6888883553383913`*^9, 3.688888373297818*^9}, {
   3.6888886186772337`*^9, 3.688888619012093*^9}, {3.68888867919553*^9, 
   3.6888886792668324`*^9}, {3.688888757930215*^9, 3.6888887585208797`*^9}, {
   3.688888847591693*^9, 3.688888864040759*^9}, {3.6888889244218473`*^9, 
   3.688888924749477*^9}, {3.688889034573216*^9, 3.688889034627758*^9}, {
   3.688889123762375*^9, 3.6888891238108463`*^9}, {3.688890407164226*^9, 
   3.688890416308159*^9}, {3.688895167099917*^9, 3.688895249456132*^9}, {
   3.688895378925871*^9, 3.688895397636888*^9}, {3.6888955741615543`*^9, 
   3.688895579992852*^9}, {3.688895752765368*^9, 3.688895754480425*^9}, {
   3.6888962282095633`*^9, 3.688896228986409*^9}, {3.688896381759405*^9, 
   3.688896388552042*^9}, {3.688896581410253*^9, 3.6888965816930313`*^9}, {
   3.688896813757118*^9, 3.688896814190908*^9}, {3.6888969665584717`*^9, 
   3.6888970210343647`*^9}, {3.688897051881063*^9, 3.6888970522634573`*^9}, {
   3.6888973672727337`*^9, 3.688897391284721*^9}, {3.688897593723143*^9, 
   3.688897612907299*^9}, {3.688900128971985*^9, 3.688900143537385*^9}, {
   3.688900174436767*^9, 3.68890017612088*^9}, {3.688900362157569*^9, 
   3.6889004407744617`*^9}, {3.6889005274734983`*^9, 3.688900528464712*^9}, {
   3.688900589058029*^9, 3.68890058999186*^9}, {3.688903511503625*^9, 
   3.688903515174328*^9}, {3.6889050832071123`*^9, 3.6889050880022497`*^9}, {
   3.688905661698052*^9, 3.688905663169743*^9}, {3.688906936096716*^9, 
   3.6889069871089983`*^9}, 3.688907030339652*^9, {3.6889088431916122`*^9, 
   3.688908865440629*^9}, 3.688909015383852*^9, 3.688909704544346*^9, 
   3.688910137647047*^9, 3.68891026548201*^9, 3.688910298033424*^9, {
   3.688910333009074*^9, 3.688910360750288*^9}, {3.6889103919665823`*^9, 
   3.688910392517655*^9}, {3.68891042438932*^9, 3.6889104249798517`*^9}, {
   3.688910633035314*^9, 3.6889106345466213`*^9}, {3.688910690562138*^9, 
   3.688910715587791*^9}, {3.6889108590667458`*^9, 3.688910874524197*^9}, {
   3.688922747609634*^9, 3.68892275355963*^9}, {3.688923478979611*^9, 
   3.688923517203274*^9}, {3.688924934177638*^9, 3.688924934392406*^9}, {
   3.688924970862418*^9, 3.6889249895224133`*^9}, {3.688925231236782*^9, 
   3.68892526105355*^9}, {3.688925494321042*^9, 3.688925502834753*^9}, {
   3.6889260090757713`*^9, 3.688926031444417*^9}, {3.688968933283319*^9, 
   3.6889689776775093`*^9}, {3.688969064040296*^9, 3.6889690643637867`*^9}, 
   3.688969416194974*^9, {3.688969519633219*^9, 3.688969519816922*^9}, {
   3.688970208570273*^9, 3.688970209021964*^9}, {3.688970358100621*^9, 
   3.688970365645336*^9}, 3.6889704463559504`*^9, {3.6889754714974327`*^9, 
   3.688975471840268*^9}, {3.688976128666058*^9, 3.6889761327060738`*^9}, {
   3.688976356331894*^9, 3.688976356627357*^9}, {3.6889771587940817`*^9, 
   3.6889771592331343`*^9}, {3.6889785580912647`*^9, 3.688978560978965*^9}, {
   3.68897860369705*^9, 3.688978616993135*^9}, {3.688978886538204*^9, 
   3.688978943316071*^9}, {3.688979308616658*^9, 3.688979339097015*^9}, {
   3.688979411114209*^9, 3.688979450996973*^9}, {3.688979519177259*^9, 
   3.6889795285955544`*^9}, {3.6889796079193783`*^9, 3.68897961097768*^9}, {
   3.6889799281952457`*^9, 3.688979942258333*^9}, {3.6889800177581263`*^9, 
   3.6889800252964277`*^9}, {3.688980082919199*^9, 3.6889800835026817`*^9}, {
   3.6889802499396152`*^9, 3.688980306442376*^9}, 3.688980630691235*^9, {
   3.68898074104103*^9, 3.68898079420763*^9}, {3.688980825247416*^9, 
   3.688980892945153*^9}, {3.6889809695730352`*^9, 3.688980970105585*^9}, {
   3.688981009202477*^9, 3.688981015098762*^9}, {3.688981065426091*^9, 
   3.688981065817326*^9}, {3.688981252808771*^9, 3.688981272469493*^9}, {
   3.688981358579383*^9, 3.6889813588642607`*^9}, {3.6889841164128323`*^9, 
   3.6889841404871807`*^9}, {3.688984172408297*^9, 3.688984176126231*^9}, {
   3.689065571121727*^9, 3.689065577415934*^9}, {3.704190312057577*^9, 
   3.704190638589671*^9}, {3.704190897368493*^9, 3.704190929887211*^9}, {
   3.704193686140792*^9, 3.704193737711585*^9}, 3.8467669508677177`*^9},
 FontSize->16,ExpressionUUID->"3f2c3962-75c8-4fe1-8c23-81f50305affd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"rng\[Omega]", " ", "=", " ", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", "15"}], "]"}], 
     SuperscriptBox["10", "6"]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"rng\[Omega]", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"9.7", " ", 
       SuperscriptBox["10", "7"]}], "}"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rng\[Theta]", " ", "=", " ", 
    RowBox[{"Range", "[", 
     RowBox[{"0.", ",", 
      RowBox[{"\[Pi]", "/", "4"}], ",", 
      RowBox[{"\[Pi]", "/", "10"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Calculating", " ", "the", " ", "wavenumbers", " ", "needs", " ", "high", 
    " ", "precision"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"precision", " ", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"subN", " ", "=", " ", 
   RowBox[{"Quiet", "@", 
    RowBox[{"SetPrecision", "[", 
     RowBox[{"subN", ",", "precision"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"subNT", " ", "=", 
   RowBox[{"Quiet", "@", " ", 
    RowBox[{"SetPrecision", "[", 
     RowBox[{"subNT", ",", "precision"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rng\[Omega]", " ", "=", " ", 
    RowBox[{"Quiet", "@", 
     RowBox[{"SetPrecision", "[", 
      RowBox[{"rng\[Omega]", ",", "precision"}], "]"}]}]}], ";"}], "\n", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "All", " ", "waves", " ", "will", " ", "use", " ", "the", " ", "same", " ",
     "wave", " ", "number"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TWs", "=", " ", 
   RowBox[{"ThermalWaves", "[", 
    RowBox[{"subN", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", "rng\[Omega]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TW2s", "=", " ", 
    RowBox[{"ThermalWaves", "[", 
     RowBox[{"subNT", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        RowBox[{"-", "1"}]}], "}"}], ",", "rng\[Omega]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"A", " ", "global", " ", "options", " ", "set"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"opts", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<height\>\"", "\[Rule]", "0"}], ",", 
     RowBox[{"\"\<FreeBC\>\"", "\[Rule]", "False"}], ",", 
     RowBox[{"\"\<ClampedBC\>\"", "\[Rule]", "False"}], ",", " ", 
     RowBox[{"\"\<NoHeatFluxBC\>\"", "\[Rule]", "False"}], ",", 
     RowBox[{"\"\<FixedTempBC\>\"", "\[Rule]", "False"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Options", "@", "ScatteredTW"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TWin", " ", "=", " ", 
    RowBox[{"TWs", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], " ", ";", 
   RowBox[{"(*", 
    RowBox[{"Choose", " ", "an", " ", "incident", " ", "wave"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"TWRs", ",", "TWTs"}], "}"}], "=", " ", 
    RowBox[{"ScatteredTW", "[", 
     RowBox[{"TWin", ",", "TWs", ",", "TW2s", ",", "opts"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Check", " ", "Boundary", " ", "condtions", " ", "divided", " ", "by", " ",
     "the", " ", "incident", " ", "wave"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{"#", ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], "&"}], "/@", 
  RowBox[{"PlotBCTW", "[", 
   RowBox[{"TWin", ",", "TWRs", ",", "TWTs", ",", "opts"}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.688813151735238*^9, 3.6888132304746943`*^9}, {
   3.688813275888927*^9, 3.688813493965633*^9}, {3.6888135281148853`*^9, 
   3.6888136265301027`*^9}, {3.688813770425427*^9, 3.68881377089213*^9}, {
   3.6888139704887867`*^9, 3.688814063236496*^9}, {3.6888141060018997`*^9, 
   3.688814109372991*^9}, {3.688814142865696*^9, 3.688814169356093*^9}, {
   3.688814292546324*^9, 3.688814385292364*^9}, {3.6888152157550297`*^9, 
   3.688815217895599*^9}, {3.688815293746689*^9, 3.688815405103827*^9}, {
   3.688815435829927*^9, 3.688815464757306*^9}, {3.6888155083642797`*^9, 
   3.6888155577081413`*^9}, {3.6888156811122313`*^9, 3.688815693223674*^9}, {
   3.688815748103005*^9, 3.688815761406006*^9}, {3.688815815294084*^9, 
   3.688815918690905*^9}, {3.6888176019883127`*^9, 3.688817829459708*^9}, {
   3.6888178757866077`*^9, 3.6888179794885178`*^9}, {3.6888180448822517`*^9, 
   3.6888180597426443`*^9}, {3.688818422006542*^9, 3.688818604099429*^9}, {
   3.688818666299725*^9, 3.688818828895919*^9}, 3.688818878040634*^9, {
   3.688818912326524*^9, 3.688818992301901*^9}, {3.688819064498892*^9, 
   3.6888191040268517`*^9}, {3.68881918313656*^9, 3.6888192093289433`*^9}, {
   3.688819322030842*^9, 3.688819332095045*^9}, {3.68881939014211*^9, 
   3.688819429575006*^9}, {3.688819497691948*^9, 3.688819508924881*^9}, {
   3.688819726872404*^9, 3.688819763278919*^9}, {3.688819797257106*^9, 
   3.6888198446685*^9}, 3.688819901950597*^9, {3.688820083616193*^9, 
   3.688820234844446*^9}, {3.688820290595459*^9, 3.6888203489949408`*^9}, {
   3.688820502208613*^9, 3.688820505531157*^9}, {3.688835025718473*^9, 
   3.6888350848516417`*^9}, {3.6888351562926893`*^9, 3.688835187686912*^9}, {
   3.688835238023254*^9, 3.6888352415757837`*^9}, 3.688835317275112*^9, {
   3.688835372412174*^9, 3.68883538666332*^9}, 3.6888354363483458`*^9, {
   3.6888355666117563`*^9, 3.688835567344989*^9}, {3.688835641410181*^9, 
   3.688835775105563*^9}, {3.6888370924721737`*^9, 3.688837100504727*^9}, {
   3.688837291670927*^9, 3.688837292087432*^9}, {3.688837586455811*^9, 
   3.6888375866367617`*^9}, 3.68883762616547*^9, {3.6888379413255444`*^9, 
   3.688837941854841*^9}, {3.688839402924694*^9, 3.688839407332652*^9}, {
   3.688841949238365*^9, 3.6888419693902063`*^9}, {3.68884201952892*^9, 
   3.688842048794979*^9}, {3.6888857620595083`*^9, 3.688885792387211*^9}, {
   3.688888021881576*^9, 3.6888880280210533`*^9}, {3.688888166605959*^9, 
   3.6888881701339207`*^9}, {3.6888883553383913`*^9, 3.688888373297818*^9}, {
   3.6888886186772337`*^9, 3.688888619012093*^9}, {3.68888867919553*^9, 
   3.6888886792668324`*^9}, {3.688888757930215*^9, 3.6888887585208797`*^9}, {
   3.688888847591693*^9, 3.688888864040759*^9}, {3.6888889244218473`*^9, 
   3.688888924749477*^9}, {3.688889034573216*^9, 3.688889034627758*^9}, {
   3.688889123762375*^9, 3.6888891238108463`*^9}, {3.688890407164226*^9, 
   3.688890416308159*^9}, {3.688895167099917*^9, 3.688895249456132*^9}, {
   3.688895378925871*^9, 3.688895397636888*^9}, {3.6888955741615543`*^9, 
   3.688895579992852*^9}, {3.688895752765368*^9, 3.688895754480425*^9}, {
   3.6888962282095633`*^9, 3.688896228986409*^9}, {3.688896381759405*^9, 
   3.688896388552042*^9}, {3.688896581410253*^9, 3.6888965816930313`*^9}, {
   3.688896813757118*^9, 3.688896814190908*^9}, {3.6888969665584717`*^9, 
   3.6888970210343647`*^9}, {3.688897051881063*^9, 3.6888970522634573`*^9}, {
   3.6888973672727337`*^9, 3.688897391284721*^9}, {3.688897593723143*^9, 
   3.688897612907299*^9}, {3.688900128971985*^9, 3.688900143537385*^9}, {
   3.688900174436767*^9, 3.68890017612088*^9}, {3.688900362157569*^9, 
   3.6889004407744617`*^9}, {3.6889005274734983`*^9, 3.688900528464712*^9}, {
   3.688900589058029*^9, 3.68890058999186*^9}, {3.688903511503625*^9, 
   3.688903515174328*^9}, {3.6889050832071123`*^9, 3.6889050880022497`*^9}, {
   3.688905661698052*^9, 3.688905663169743*^9}, {3.688906936096716*^9, 
   3.6889069871089983`*^9}, 3.688907030339652*^9, {3.6889088431916122`*^9, 
   3.688908865440629*^9}, 3.688909015383852*^9, 3.688909704544346*^9, 
   3.688910137647047*^9, 3.68891026548201*^9, 3.688910298033424*^9, {
   3.688910333009074*^9, 3.688910360750288*^9}, {3.6889103919665823`*^9, 
   3.688910392517655*^9}, {3.68891042438932*^9, 3.6889104249798517`*^9}, {
   3.688910633035314*^9, 3.6889106345466213`*^9}, {3.688910690562138*^9, 
   3.688910715587791*^9}, {3.6889108590667458`*^9, 3.688910874524197*^9}, {
   3.688922747609634*^9, 3.68892275355963*^9}, {3.688923478979611*^9, 
   3.688923517203274*^9}, {3.688924934177638*^9, 3.688924934392406*^9}, {
   3.688924970862418*^9, 3.6889249895224133`*^9}, {3.688925231236782*^9, 
   3.68892526105355*^9}, {3.688925494321042*^9, 3.688925502834753*^9}, {
   3.6889260090757713`*^9, 3.688926031444417*^9}, {3.688968933283319*^9, 
   3.6889689776775093`*^9}, {3.688969064040296*^9, 3.6889690643637867`*^9}, 
   3.688969416194974*^9, {3.688969519633219*^9, 3.688969519816922*^9}, {
   3.688970208570273*^9, 3.688970209021964*^9}, {3.688970358100621*^9, 
   3.688970365645336*^9}, 3.6889704463559504`*^9, {3.6889754714974327`*^9, 
   3.688975471840268*^9}, {3.688976128666058*^9, 3.6889761327060738`*^9}, {
   3.688976356331894*^9, 3.688976356627357*^9}, {3.6889771587940817`*^9, 
   3.6889771592331343`*^9}, {3.6889785580912647`*^9, 3.688978560978965*^9}, {
   3.68897860369705*^9, 3.688978616993135*^9}, {3.688978886538204*^9, 
   3.688978943316071*^9}, {3.688979308616658*^9, 3.688979339097015*^9}, {
   3.688979411114209*^9, 3.688979450996973*^9}, {3.688979519177259*^9, 
   3.6889795285955544`*^9}, {3.6889796079193783`*^9, 3.68897961097768*^9}, {
   3.6889799281952457`*^9, 3.688979942258333*^9}, {3.6889800177581263`*^9, 
   3.6889800252964277`*^9}, {3.688980082919199*^9, 3.6889800835026817`*^9}, {
   3.6889802499396152`*^9, 3.688980306442376*^9}, 3.688980630691235*^9, {
   3.68898074104103*^9, 3.68898079420763*^9}, {3.688980825247416*^9, 
   3.688980892945153*^9}, {3.6889809695730352`*^9, 3.688980970105585*^9}, {
   3.688981009202477*^9, 3.688981015098762*^9}, {3.688981065426091*^9, 
   3.688981065817326*^9}, {3.688981252808771*^9, 3.688981272469493*^9}, {
   3.688981358579383*^9, 3.6889813588642607`*^9}, {3.6889841164128323`*^9, 
   3.6889841404871807`*^9}, {3.688984172408297*^9, 3.688984176126231*^9}, {
   3.689065571121727*^9, 3.6890655717447367`*^9}, {3.6894018101651087`*^9, 
   3.689401915019454*^9}, {3.689401998217073*^9, 3.689402002104985*^9}, {
   3.689402222092333*^9, 3.6894022222595167`*^9}, {3.68940233843363*^9, 
   3.689402364632378*^9}, {3.689406536448394*^9, 3.689406538805279*^9}, 
   3.689407013828017*^9, {3.689407415101989*^9, 3.689407445288642*^9}, {
   3.70419107162984*^9, 3.7041910719878607`*^9}, {3.704191132338038*^9, 
   3.704191144169651*^9}, {3.704191463591655*^9, 3.704191464429606*^9}, {
   3.704191579086977*^9, 3.7041915793756227`*^9}, {3.704193627175301*^9, 
   3.70419367572311*^9}, 3.8467667461917887`*^9, 3.846766850680122*^9, {
   3.846766898458294*^9, 3.8467669394954853`*^9}, {3.846767018390996*^9, 
   3.846767037677483*^9}, {3.846767074495722*^9, 3.8467670748493977`*^9}, {
   3.846767112354392*^9, 3.846767129144821*^9}, {3.8467671746768703`*^9, 
   3.846767174795144*^9}},
 FontSize->16,
 CellLabel->
  "In[144]:=",ExpressionUUID->"9096b768-e85c-4df7-9523-23e2d5cb0bcd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"height\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"ClampedBC\"\>", "\[Rule]", "False"}], ",", 
   RowBox[{"\<\"FreeBC\"\>", "\[Rule]", "False"}], ",", 
   RowBox[{"\<\"FixedTempBC\"\>", "\[Rule]", "False"}], ",", 
   RowBox[{"\<\"NoHeatFluxBC\"\>", "\[Rule]", "False"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.846767035844346*^9, 3.846767075791469*^9, {3.846767114757024*^9, 
   3.846767129412285*^9}, 3.846767175370713*^9},
 CellLabel->
  "Out[153]=",ExpressionUUID->"04eba9e1-3e79-4f3a-b73a-8963d8eb7729"],

Cell[BoxData[
 TemplateBox[{
  "NSolve", "precw", 
   "\"The precision of the argument function (\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"0.`\\\", \\\"\
\[VeryThinSpace]\\\"}], \\\"+\\\", RowBox[{\\\"0.`\\\", \\\" \\\", \\\"\
\[ImaginaryI]\\\"}]}], \\\")\\\"}], \\\"-\\\", RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"480.4662629185928`\\\", \\\"\[VeryThinSpace]\\\"}], \\\"+\
\\\", RowBox[{\\\"0.00022353910508329225`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\
\"}]}], \\\")\\\"}], \\\" \\\", RowBox[{\\\"\[CapitalPsi]2\\\", \\\"[\\\", \\\
\"T\\\", \\\"]\\\"}]}], \\\"-\\\", RowBox[{RowBox[{\\\"(\\\", \
RowBox[{\\\"1.9802399081339168`*^6\\\", \\\"+\\\", \
RowBox[{\\\"1.9802390096768674`*^6\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \
\\\")\\\"}], \\\" \\\", RowBox[{\\\"\[CapitalPsi]3\\\", \\\"[\\\", \\\"T\\\", \
\\\"]\\\"}]}]}], \\\",\\\", RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"0.`\\\", \\\"\[VeryThinSpace]\\\"}], \\\"+\\\", \
RowBox[{\\\"0.`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\")\\\"}], \\\"+\
\\\", RowBox[{\\\"\[ImaginaryI]\\\", \\\" \\\", RowBox[{\\\"(\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\")\\\"}]}], \
\\\"-\\\", RowBox[{\\\"\[ImaginaryI]\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"(\\\", RowBox[{\\\"1.9802399081339168`*^6\\\", \\\
\"+\\\", RowBox[{\\\"1.9802390096768674`*^6\\\", \\\" \\\", \\\"\[ImaginaryI]\
\\\"}]}], \\\")\\\"}], \\\" \\\", RowBox[{\\\"\[CapitalPsi]2\\\", \\\"[\\\", \
\\\"T\\\", \\\"]\\\"}]}], \\\"-\\\", RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"480.4662629185928`\\\", \\\"\[VeryThinSpace]\\\"}], \\\"+\
\\\", RowBox[{RowBox[{\\\"\[LeftSkeleton]\\\", \\\"23\\\", \\\"\
\[RightSkeleton]\\\"}], \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\")\\\"}], \\\
\" \\\", RowBox[{\\\"\[CapitalPsi]3\\\", \\\"[\\\", \\\"T\\\", \
\\\"]\\\"}]}]}], \\\")\\\"}]}]}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"0.`\\\", \\\"\[VeryThinSpace]\\\"}], \\\"+\\\", \
RowBox[{\\\"0.`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\")\\\"}], \\\"-\
\\\", RowBox[{RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"480.4662629185928`\\\", \
\\\"\[VeryThinSpace]\\\"}], \\\"+\\\", \
RowBox[{\\\"0.00022353910508329225`\\\", \\\" \\\", \
\\\"\[ImaginaryI]\\\"}]}], \\\")\\\"}], \\\" \\\", RowBox[{\\\"\[CapitalPsi]2\
\\\", \\\"[\\\", \\\"R\\\", \\\"]\\\"}]}], \\\"+\\\", RowBox[{RowBox[{\\\"(\\\
\", RowBox[{RowBox[{\\\"748781.7105598807`\\\", \\\"\[VeryThinSpace]\\\"}], \
\\\"+\\\", RowBox[{\\\"748781.8537715545`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\
\"}]}], \\\")\\\"}], \\\" \\\", RowBox[{\\\"\[CapitalPsi]3\\\", \\\"[\\\", \\\
\"R\\\", \\\"]\\\"}]}]}]}], \\\"}\\\"}]\\)) is less than WorkingPrecision \
(\\!\\(\\*RowBox[{\\\"19.`\\\"}]\\)).\"", 2, 154, 9, 29879771787938101905, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.846767114808066*^9, 3.846767129434676*^9}, 
   3.846767175387723*^9},
 CellLabel->
  "During evaluation of \
In[144]:=",ExpressionUUID->"e9782d09-c8dc-46a3-8fc7-0738561bb288"],

Cell[BoxData[
 TemplateBox[{
  "NSolve", "precw", 
   "\"The precision of the argument function (\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{\\\"0.57999999999999996003197111349436454475`20.\\\", \
\\\" \\\", RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"0.0006397902547608128`\\\", \\\"\[VeryThinSpace]\\\"}], \
\\\"-\\\", RowBox[{\\\"480.46626285331706`\\\", \\\" \\\", \
\\\"\[ImaginaryI]\\\"}]}], \\\")\\\"}], \\\"+\\\", RowBox[{RowBox[{\\\"(\\\", \
RowBox[{\\\"1.9063785881412022`*^6\\\", \\\"+\\\", \
RowBox[{\\\"1.9063753121784395`*^6\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \
\\\")\\\"}], \\\" \\\", RowBox[{\\\"\[Zeta]0\\\", \\\"[\\\", \\\"R\\\", \\\"]\
\\\"}]}], \\\"-\\\", RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"0.0006397902547608128`\\\", \\\"\[VeryThinSpace]\\\"}], \
\\\"-\\\", RowBox[{\\\"480.46626285331706`\\\", \\\" \\\", \
\\\"\[ImaginaryI]\\\"}]}], \\\")\\\"}], \\\" \\\", RowBox[{\\\"\[Xi]0\\\", \\\
\"[\\\", \\\"R\\\", \\\"]\\\"}]}]}], \\\")\\\"}]}], \\\"-\\\", \
RowBox[{\\\"1.08000000000000007105427357601001858711`20.\\\", \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"-\\\
\", \\\"2.136515407656044`*^6\\\"}], \\\"-\\\", \
RowBox[{\\\"2.1365154368122425`*^6\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \
\\\")\\\"}], \\\" \\\", RowBox[{\\\"\[Zeta]0\\\", \\\"[\\\", \\\"T\\\", \\\"]\
\\\"}]}], \\\"+\\\", RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"455.34294245294046`\\\", \\\"\[VeryThinSpace]\\\"}], \
\\\"+\\\", RowBox[{RowBox[{\\\"\[LeftSkeleton]\\\", \\\"23\\\", \\\"\
\[RightSkeleton]\\\"}], \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\")\\\"}], \\\
\" \\\", RowBox[{\\\"\[Xi]0\\\", \\\"[\\\", \\\"T\\\", \\\"]\\\"}]}]}], \\\")\
\\\"}]}]}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\
\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}]\\)) is less than WorkingPrecision \
(\\!\\(\\*RowBox[{\\\"19.`\\\"}]\\)).\"", 2, 154, 10, 29879771787938101905, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.846767114808066*^9, 3.846767129434676*^9}, 
   3.84676717540067*^9},
 CellLabel->
  "During evaluation of \
In[144]:=",ExpressionUUID->"f8c6a1dc-d705-4cf2-aab5-acc44c374906"],

Cell[BoxData[
 TemplateBox[{
  "NSolve", "precw", 
   "\"The precision of the argument function (\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"0.`\\\", \\\"\
\[VeryThinSpace]\\\"}], \\\"+\\\", RowBox[{\\\"0.`\\\", \\\" \\\", \\\"\
\[ImaginaryI]\\\"}]}], \\\")\\\"}], \\\"-\\\", RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"960.9325258371856`\\\", \\\"\[VeryThinSpace]\\\"}], \\\"+\
\\\", RowBox[{\\\"0.000894156420333169`\\\", \\\" \\\", \
\\\"\[ImaginaryI]\\\"}]}], \\\")\\\"}], \\\" \\\", RowBox[{\\\"\[CapitalPsi]2\
\\\", \\\"[\\\", \\\"T\\\", \\\"]\\\"}]}], \\\"-\\\", RowBox[{RowBox[{\\\"(\\\
\", RowBox[{\\\"2.800481755359362`*^6\\\", \\\"+\\\", \
RowBox[{\\\"2.800481243701507`*^6\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \
\\\")\\\"}], \\\" \\\", RowBox[{\\\"\[CapitalPsi]3\\\", \\\"[\\\", \\\"T\\\", \
\\\"]\\\"}]}]}], \\\",\\\", RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"0.`\\\", \\\"\[VeryThinSpace]\\\"}], \\\"+\\\", \
RowBox[{\\\"0.`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\")\\\"}], \\\"+\
\\\", RowBox[{\\\"\[ImaginaryI]\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"-\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\
\\\", \\\"\[RightSkeleton]\\\"}]}], \\\")\\\"}]}], \\\"-\\\", RowBox[{\\\"\
\[ImaginaryI]\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"(\\\", RowBox[{\\\"2.800481755359362`*^6\\\", \
\\\"+\\\", RowBox[{\\\"2.800481243701507`*^6\\\", \\\" \\\", \
\\\"\[ImaginaryI]\\\"}]}], \\\")\\\"}], \\\" \\\", RowBox[{\\\"\[CapitalPsi]2\
\\\", \\\"[\\\", \\\"T\\\", \\\"]\\\"}]}], \\\"-\\\", RowBox[{RowBox[{\\\"(\\\
\", RowBox[{RowBox[{\\\"960.9325258371856`\\\", \\\"\[VeryThinSpace]\\\"}], \
\\\"+\\\", RowBox[{RowBox[{\\\"\[LeftSkeleton]\\\", \\\"21\\\", \\\"\
\[RightSkeleton]\\\"}], \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\")\\\"}], \\\
\" \\\", RowBox[{\\\"\[CapitalPsi]3\\\", \\\"[\\\", \\\"T\\\", \
\\\"]\\\"}]}]}], \\\")\\\"}]}]}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"0.`\\\", \\\"\[VeryThinSpace]\\\"}], \\\"+\\\", \
RowBox[{\\\"0.`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\")\\\"}], \\\"-\
\\\", RowBox[{RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"960.9325258371856`\\\", \
\\\"\[VeryThinSpace]\\\"}], \\\"+\\\", RowBox[{\\\"0.000894156420333169`\\\", \
\\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\")\\\"}], \\\" \\\", RowBox[{\\\"\
\[CapitalPsi]2\\\", \\\"[\\\", \\\"R\\\", \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{RowBox[{\\\"(\\\", RowBox[{\\\"1.0589371374637575`*^6\\\", \\\"+\\\", \
RowBox[{\\\"1.0589375657289769`*^6\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \
\\\")\\\"}], \\\" \\\", RowBox[{\\\"\[CapitalPsi]3\\\", \\\"[\\\", \\\"R\\\", \
\\\"]\\\"}]}]}]}], \\\"}\\\"}]\\)) is less than WorkingPrecision \
(\\!\\(\\*RowBox[{\\\"19.`\\\"}]\\)).\"", 2, 154, 11, 29879771787938101905, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.846767114808066*^9, 3.846767129434676*^9}, 
   3.8467671754092493`*^9},
 CellLabel->
  "During evaluation of \
In[144]:=",ExpressionUUID->"706f83c4-3488-475e-9317-c1978b3a8e0d"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NSolve\\\", \\\"::\\\", \
\\\"precw\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 154, 12, 29879771787938101905, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.846767114808066*^9, 3.846767129434676*^9}, 
   3.846767175418762*^9},
 CellLabel->
  "During evaluation of \
In[144]:=",ExpressionUUID->"594033f3-c1b1-42d0-b0c7-10ceb05259ff"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], Thickness[Large], 
      PointBox[{{1.*^6, 2.8001555620057335`*^-16}, {2.*^6, 
       2.4558988901752466`*^-16}, {3.*^6, 1.6474670587438015`*^-16}, {4.*^6, 
       2.0547524290028943`*^-16}, {5.*^6, 2.001312741227201*^-16}, {6.*^6, 
       2.471200583782556*^-16}, {7.*^6, 3.9623970634999833`*^-16}, {8.*^6, 
       1.902331092901641*^-16}, {9.*^6, 3.180320892565801*^-16}, {1.*^7, 
       2.0013127314876606`*^-16}, {1.1*^7, 1.6017857907583752`*^-16}, {1.2*^7,
        3.082128617904802*^-16}, {1.3*^7, 6.310065216668278*^-17}, {1.4*^7, 
       2.0386364510444275`*^-16}, {1.5*^7, 
       2.625145800871289*^-16}}]}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"\[Omega]\"", TraditionalForm], 
      FormBox["\"u\"", TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->Medium,
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"Displacement on boundary\"", TraditionalForm],
    PlotRange->{{0, 1.5*^7}, {0, 3.9623970634999833`*^-16}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, 
     {RGBColor[0, 1, 0], PointSize[0.012833333333333334`], Thickness[Large], 
      PointBox[{{1.*^6, 9.124147122463472*^-14}, {2.*^6, 
       1.0212789076857258`*^-13}, {3.*^6, 1.180517545544057*^-13}, {4.*^6, 
       1.5343637236517012`*^-13}, {5.*^6, 2.7830734302752847`*^-15}, {6.*^6, 
       5.229547906726082*^-15}, {7.*^6, 4.7433298172444944`*^-15}, {8.*^6, 
       7.545117243119846*^-15}, {9.*^6, 5.603224077528139*^-16}, {1.*^7, 
       1.1331205592232582`*^-15}, {1.1*^7, 1.7464174553709436`*^-15}, {1.2*^7,
        7.736277169768441*^-16}, {1.3*^7, 1.2872413325858728`*^-15}, {1.4*^7, 
       3.832470056314647*^-15}, {1.5*^7, 1.795266689975574*^-15}}]}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"\[Omega]\"", TraditionalForm], 
      FormBox["\"\[Sigma].n\"", TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->Medium,
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"Stress on boundary\"", TraditionalForm],
    PlotRange->{{0, 1.5*^7}, {0, 1.5343637236517012`*^-13}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, 
     {RGBColor[0.5, 0, 0.5], PointSize[0.012833333333333334`], Thickness[
      Large], 
      PointBox[{{1.*^6, 4.834186437222749*^-17}, {2.*^6, 
       3.2353270453598405`*^-17}, {3.*^6, 1.3590561402629666`*^-16}, {4.*^6, 
       1.4810111416067855`*^-16}, {5.*^6, 3.8966535389878595`*^-16}, {6.*^6, 
       4.319033905623555*^-16}, {7.*^6, 2.2444132530095434`*^-16}, {8.*^6, 
       1.3685105442111903`*^-16}, {9.*^6, 1.1320797250880853`*^-16}, {1.*^7, 
       1.1270810976331122`*^-16}, {1.1*^7, 1.0177947894207768`*^-17}, {1.2*^7,
        1.1164807203601886`*^-16}, {1.3*^7, 1.1105739915155744`*^-16}, {
       1.4*^7, 7.74526926969335*^-18}, {1.5*^7, 
       2.2212267301847105`*^-16}}]}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"\[Omega]\"", TraditionalForm], 
      FormBox["\"\[Theta]\"", TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->Medium,
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"Temperature on boundary\"", TraditionalForm],
    PlotRange->{{0, 1.5*^7}, {0, 4.319033905623555*^-16}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, 
     {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], Thickness[Large], 
      PointBox[{{1.*^6, 1.2114827910651072`*^-12}, {2.*^6, 
       5.417915748097636*^-13}, {3.*^6, 1.3023048690511295`*^-12}, {4.*^6, 
       0.}, {5.*^6, 2.9075586981565784`*^-13}, {6.*^6, 
       1.615310387862662*^-13}, {7.*^6, 2.076827641534686*^-13}, {8.*^6, 
       2.708957874008445*^-13}, {9.*^6, 2.2200317824273968`*^-13}, {1.*^7, 
       2.741272629529788*^-13}, {1.1*^7, 5.286470360228665*^-13}, {1.2*^7, 
       4.038275969609057*^-13}, {1.3*^7, 2.982111485241691*^-13}, {1.4*^7, 
       0.}, {1.5*^7, 5.779110131117139*^-13}}]}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"\[Omega]\"", TraditionalForm], 
      FormBox["\"\[Kappa]\[Del]\[Theta].n\"", TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->Medium,
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"Heat Flux on boundary\"", TraditionalForm],
    PlotRange->{{0, 1.5*^7}, {0, 1.3023048690511295`*^-12}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.846767035844346*^9, 3.846767075791469*^9, {3.846767114757024*^9, 
   3.846767129412285*^9}, 3.8467671755944643`*^9},
 CellLabel->
  "Out[155]=",ExpressionUUID->"9f8c4574-2be2-4469-98db-f91326cba2b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"PlotTW", "[", 
    RowBox[{"#", ",", 
     RowBox[{"\"\<ReferenceTW\>\"", "->", "TWin"}]}], "]"}], "&"}], "/@", 
  "TWRs"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotTW", "[", 
    RowBox[{"#", ",", 
     RowBox[{"\"\<ReferenceTW\>\"", "->", "TWin"}]}], "]"}], "&"}], "/@", 
  "TWTs"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotTW", "[", "#", "]"}], "&"}], "/@", 
  "TWRs"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotTW", "[", "#", "]"}], "&"}], "/@", "TWTs"}]}], "Input",
 CellChangeTimes->{{3.688813151735238*^9, 3.6888132304746943`*^9}, {
   3.688813275888927*^9, 3.688813493965633*^9}, {3.6888135281148853`*^9, 
   3.6888136265301027`*^9}, {3.688813770425427*^9, 3.68881377089213*^9}, {
   3.6888139704887867`*^9, 3.688814063236496*^9}, {3.6888141060018997`*^9, 
   3.688814109372991*^9}, {3.688814142865696*^9, 3.688814169356093*^9}, {
   3.688814292546324*^9, 3.688814385292364*^9}, {3.6888152157550297`*^9, 
   3.688815217895599*^9}, {3.688815293746689*^9, 3.688815405103827*^9}, {
   3.688815435829927*^9, 3.688815464757306*^9}, {3.6888155083642797`*^9, 
   3.6888155577081413`*^9}, {3.6888156811122313`*^9, 3.688815693223674*^9}, {
   3.688815748103005*^9, 3.688815761406006*^9}, {3.688815815294084*^9, 
   3.688815918690905*^9}, {3.6888176019883127`*^9, 3.688817829459708*^9}, {
   3.6888178757866077`*^9, 3.6888179794885178`*^9}, {3.6888180448822517`*^9, 
   3.6888180597426443`*^9}, {3.688818422006542*^9, 3.688818604099429*^9}, {
   3.688818666299725*^9, 3.688818828895919*^9}, 3.688818878040634*^9, {
   3.688818912326524*^9, 3.688818992301901*^9}, {3.688819064498892*^9, 
   3.6888191040268517`*^9}, {3.68881918313656*^9, 3.6888192093289433`*^9}, {
   3.688819322030842*^9, 3.688819332095045*^9}, {3.68881939014211*^9, 
   3.688819429575006*^9}, {3.688819497691948*^9, 3.688819508924881*^9}, {
   3.688819726872404*^9, 3.688819763278919*^9}, {3.688819797257106*^9, 
   3.6888198446685*^9}, 3.688819901950597*^9, {3.688820083616193*^9, 
   3.688820234844446*^9}, {3.688820290595459*^9, 3.6888203489949408`*^9}, {
   3.688820502208613*^9, 3.688820505531157*^9}, {3.688835025718473*^9, 
   3.6888350848516417`*^9}, {3.6888351562926893`*^9, 3.688835187686912*^9}, {
   3.688835238023254*^9, 3.6888352415757837`*^9}, 3.688835317275112*^9, {
   3.688835372412174*^9, 3.68883538666332*^9}, 3.6888354363483458`*^9, {
   3.6888355666117563`*^9, 3.688835567344989*^9}, {3.688835641410181*^9, 
   3.688835775105563*^9}, {3.6888370924721737`*^9, 3.688837100504727*^9}, {
   3.688837291670927*^9, 3.688837292087432*^9}, {3.688837586455811*^9, 
   3.6888375866367617`*^9}, 3.68883762616547*^9, {3.6888379413255444`*^9, 
   3.688837941854841*^9}, {3.688839402924694*^9, 3.688839407332652*^9}, {
   3.688841949238365*^9, 3.6888419693902063`*^9}, {3.68884201952892*^9, 
   3.688842048794979*^9}, {3.6888857620595083`*^9, 3.688885792387211*^9}, {
   3.688888021881576*^9, 3.6888880280210533`*^9}, {3.688888166605959*^9, 
   3.6888881701339207`*^9}, {3.6888883553383913`*^9, 3.688888373297818*^9}, {
   3.6888886186772337`*^9, 3.688888619012093*^9}, {3.68888867919553*^9, 
   3.6888886792668324`*^9}, {3.688888757930215*^9, 3.6888887585208797`*^9}, {
   3.688888847591693*^9, 3.688888864040759*^9}, {3.6888889244218473`*^9, 
   3.688888924749477*^9}, {3.688889034573216*^9, 3.688889034627758*^9}, {
   3.688889123762375*^9, 3.6888891238108463`*^9}, {3.688890407164226*^9, 
   3.688890416308159*^9}, {3.688895167099917*^9, 3.688895249456132*^9}, {
   3.688895378925871*^9, 3.688895397636888*^9}, {3.6888955741615543`*^9, 
   3.688895579992852*^9}, {3.688895752765368*^9, 3.688895754480425*^9}, {
   3.6888962282095633`*^9, 3.688896228986409*^9}, {3.688896381759405*^9, 
   3.688896388552042*^9}, {3.688896581410253*^9, 3.6888965816930313`*^9}, {
   3.688896813757118*^9, 3.688896814190908*^9}, {3.6888969665584717`*^9, 
   3.6888970210343647`*^9}, {3.688897051881063*^9, 3.6888970522634573`*^9}, {
   3.6888973672727337`*^9, 3.688897391284721*^9}, {3.688897593723143*^9, 
   3.688897612907299*^9}, {3.688900128971985*^9, 3.688900143537385*^9}, {
   3.688900174436767*^9, 3.68890017612088*^9}, {3.688900362157569*^9, 
   3.6889004407744617`*^9}, {3.6889005274734983`*^9, 3.688900528464712*^9}, {
   3.688900589058029*^9, 3.68890058999186*^9}, {3.688903511503625*^9, 
   3.688903515174328*^9}, {3.6889050832071123`*^9, 3.6889050880022497`*^9}, {
   3.688905661698052*^9, 3.688905663169743*^9}, {3.688906936096716*^9, 
   3.6889069871089983`*^9}, 3.688907030339652*^9, {3.6889088431916122`*^9, 
   3.688908865440629*^9}, 3.688909015383852*^9, 3.688909704544346*^9, 
   3.688910137647047*^9, 3.68891026548201*^9, 3.688910298033424*^9, {
   3.688910333009074*^9, 3.688910360750288*^9}, {3.6889103919665823`*^9, 
   3.688910392517655*^9}, {3.68891042438932*^9, 3.6889104249798517`*^9}, {
   3.688910633035314*^9, 3.6889106345466213`*^9}, {3.688910690562138*^9, 
   3.688910715587791*^9}, {3.6889108590667458`*^9, 3.688910874524197*^9}, {
   3.688922747609634*^9, 3.68892275355963*^9}, {3.688923478979611*^9, 
   3.688923517203274*^9}, {3.688924934177638*^9, 3.688924934392406*^9}, {
   3.688924970862418*^9, 3.6889249895224133`*^9}, {3.6889260416297083`*^9, 
   3.6889260480172567`*^9}, {3.6889703971326427`*^9, 
   3.6889703973478947`*^9}, {3.688975485056644*^9, 3.688975485255747*^9}, {
   3.689401862237295*^9, 3.689401863652289*^9}, {3.689401951153803*^9, 
   3.689401968977174*^9}, {3.689402771615114*^9, 3.689402772310947*^9}},
 FontSize->16,
 CellLabel->
  "In[156]:=",ExpressionUUID->"eddd02f3-202f-42a6-930d-902f00b727f5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     GraphicsBox[{
       PointSize[Large], 
       PointBox[{{0, 0}, {1.*^6, 1471.7095366722037`}, {2.*^6, 
         1471.7095366722037`}, {3.*^6, 1471.7095366722037`}, {4.*^6, 
         1471.7095366722037`}, {5.*^6, 1471.7095366722037`}, {6.*^6, 
         1471.7095366722037`}, {7.*^6, 1471.7095366722037`}, {8.*^6, 
         1471.7095366722037`}, {9.*^6, 1471.7095366722035`}, {1.*^7, 
         1471.7095366722037`}, {1.1*^7, 1471.7095366722037`}, {1.2*^7, 
         1471.7095366722037`}, {1.3*^7, 1471.709536672204}, {1.4*^7, 
         1471.7095366722037`}, {1.5*^7, 1471.7095366722042`}}, VertexColors -> {
          GrayLevel[1], 
          RGBColor[1., 0., 0.], 
          RGBColor[1., 0., 0.], 
          RGBColor[1., 0., 0.], 
          RGBColor[1., 0., 0.], 
          RGBColor[1., 0., 0.], 
          RGBColor[1., 0., 0.], 
          RGBColor[1., 0., 0.], 
          RGBColor[1., 0., 0.], 
          RGBColor[1., 0., 0.], 
          RGBColor[1., 0., 0.], 
          RGBColor[1., 0., 0.], 
          RGBColor[1., 0., 0.], 
          RGBColor[1., 0., 0.], 
          RGBColor[1., 0., 0.], 
          RGBColor[1., 0., 0.]}]}, {Axes -> True, AspectRatio -> 1, AxesLabel -> {
         FormBox["\"\[FormalW]\"", TraditionalForm], 
         FormBox[
         "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(1\\)]\\)\"", TraditionalForm]}, 
       PlotLabel -> 
       FormBox["\"Pressure dominated Wave \[CurlyPhi]\"", TraditionalForm]}], 
     
     FormBox[
      FormBox[
       TemplateBox[{"\"0%\"", "\"50%\"", "\"100%\""}, "PointLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 StyleBox[
                 "\"Relative energy flux\"", {FontFamily -> "Arial"}, 
                  Background -> Automatic, StripOnInput -> False]}, {
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0., 1.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0., 1.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0., 0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0., 0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1., 0., 0.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1., 0., 0.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0., 0., 1.], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0., 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0.`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0., 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.5, 0., 0.5], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0., 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666667, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "0.`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0., 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1., 0., 0.], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 1., 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.33333333333333337`, 0.6666666666666667, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "1.`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 1., 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.5, 1., 0.5], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendLabel", "\[Rule]", "\"Relative energy flux\""}]}],
            "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{
       PointSize[Large], 
       PointBox[{{0, 0}, {1.*^6, 0.5245552302317659}, {2.*^6, 
         0.7418331208075046}, {3.*^6, 0.9085563101374082}, {4.*^6, 
         1.0491104604635317`}, {5.*^6, 1.172941152751281}, {6.*^6, 
         1.2848926559759788`}, {7.*^6, 1.3878426881114825`}, {8.*^6, 
         1.4836662416150093`}, {9.*^6, 1.5736656906952975`}, {1.*^7, 
         1.658789286086394}, {1.1*^7, 1.7397528804972588`}, {1.2*^7, 
         1.8171126202748167`}, {1.3*^7, 1.8913107794134494`}, {1.4*^7, 
         1.9627059519675922`}, {1.5*^7, 2.0315936708536264`}}, VertexColors -> {
          GrayLevel[1], 
          RGBColor[5.319322988143459*^-6, 0., 0.9999946806770118], 
          RGBColor[7.521569464351773*^-6, 0., 0.9999924784305356], 
          RGBColor[9.211958042754492*^-6, 0., 0.9999907880419573], 
          RGBColor[0.000010637194726059521`, 0., 0.999989362805274], 
          RGBColor[0.000011892952836082773`, 0., 0.9999881070471639], 
          RGBColor[0.00001302831685827344, 0., 0.9999869716831418], 
          RGBColor[0.000014072449771610081`, 0., 0.9999859275502284], 
          RGBColor[0.000015044354416159522`, 0., 0.9999849556455839], 
          RGBColor[0.00001595723082472804, 0., 0.9999840427691753], 
          RGBColor[0.000016820690130381155`, 0., 0.9999831793098696], 
          RGBColor[0.00001764198808703545, 0., 0.9999823580119129], 
          RGBColor[0.00001842676175247639, 0., 0.9999815732382475], 
          RGBColor[0.000019179494009554754`, 0., 0.9999808205059905], 
          RGBColor[0.0000199038195729942, 0., 0.999980096180427], 
          RGBColor[0.000020602733971065512`, 0., 0.9999793972660289]}]}, {
      Axes -> True, AspectRatio -> 1, AxesLabel -> {
         FormBox["\"\[FormalW]\"", TraditionalForm], 
         FormBox[
         "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(1\\)]\\)\"", TraditionalForm]}, 
       PlotLabel -> 
       FormBox["\"Thermal dominated Wave \[CurlyTheta]\"", TraditionalForm]}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"0%\"", "\"50%\"", "\"100%\""}, "PointLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 StyleBox[
                 "\"Relative energy flux\"", {FontFamily -> "Arial"}, 
                  Background -> Automatic, StripOnInput -> False]}, {
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0., 1.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0., 1.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0., 0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0., 0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1., 0., 0.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1., 0., 0.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0., 0., 1.], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0., 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0.`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0., 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.5, 0., 0.5], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0., 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666667, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "0.`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0., 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1., 0., 0.], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 1., 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.33333333333333337`, 0.6666666666666667, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "1.`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 1., 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.5, 1., 0.5], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendLabel", "\[Rule]", "\"Relative energy flux\""}]}],
            "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{
       PointSize[Large], 
       PointBox[{{0, 0}, {1.*^6, 1.335502567656249}, {2.*^6, 
         1.8886858506604454`}, {3.*^6, 2.3131583120818835`}, {4.*^6, 
         2.6710051499430034`}, {5.*^6, 2.986274542852781}, {6.*^6, 
         3.271299860844175}, {7.*^6, 3.5334076914258934`}, {8.*^6, 
         3.77737171166622}, {9.*^6, 4.006507728978534}, {1.*^7, 
         4.223229962556298}, {1.1*^7, 4.429360952880428}, {1.2*^7, 
         4.626316632610693}, {1.3*^7, 4.815223018660599}, {1.4*^7, 
         4.996993081214683}, {1.5*^7, 5.172379238607312}}, VertexColors -> {
          GrayLevel[1], 
          RGBColor[0.007787201200050146, 0., 0.9922127987999498], 
          RGBColor[0.011018349616424684`, 0., 0.9889816503835753], 
          RGBColor[0.013501490891674489`, 0., 0.9864985091083255], 
          RGBColor[0.015597121504513197`, 0., 0.9844028784954868], 
          RGBColor[0.01744506006252312, 0., 0.9825549399374769], 
          RGBColor[0.01911704206720655, 0., 0.9808829579327935], 
          RGBColor[0.020655689021718673`, 0., 0.9793443109782813], 
          RGBColor[0.02208877368768316, 0., 0.9779112263123169], 
          RGBColor[0.02343558808469478, 0., 0.9765644119153052], 
          RGBColor[0.02471017905090964, 0., 0.9752898209490903], 
          RGBColor[0.02592315101694922, 0., 0.9740768489830508], 
          RGBColor[0.027082742666260193`, 0., 0.9729172573337398], 
          RGBColor[0.028195505835170498`, 0., 0.9718044941648295], 
          RGBColor[0.029266752745043895`, 0., 0.9707332472549561], 
          RGBColor[0.03030086143203408, 0., 0.969699138567966]}]}, {
      Axes -> True, AspectRatio -> 1, AxesLabel -> {
         FormBox["\"\[FormalW]\"", TraditionalForm], 
         FormBox[
         "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(1\\)]\\)\"", TraditionalForm]}, 
       PlotLabel -> FormBox["\"Shear Wave\"", TraditionalForm]}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"0%\"", "\"50%\"", "\"100%\""}, "PointLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 StyleBox[
                 "\"Relative energy flux\"", {FontFamily -> "Arial"}, 
                  Background -> Automatic, StripOnInput -> False]}, {
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0., 1.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0., 1.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0., 0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0., 0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1., 0., 0.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1., 0., 0.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0., 0., 1.], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0., 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0.`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0., 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.5, 0., 0.5], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0., 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666667, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "0.`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0., 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1., 0., 0.], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 1., 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.33333333333333337`, 0.6666666666666667, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "1.`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 1., 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.5, 1., 0.5], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendLabel", "\[Rule]", "\"Relative energy flux\""}]}],
            "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.694941529825543*^9, 3.694941876528112*^9, 3.694942476236816*^9, 
   3.703246032288622*^9, 3.704190938821062*^9, 3.704191092502658*^9, 
   3.704191161262248*^9, 3.704192189809314*^9, {3.846767009567337*^9, 
   3.846767039051855*^9}, 3.846767083586129*^9, 3.846767180993617*^9},
 FontSize->16,
 CellLabel->
  "Out[156]=",ExpressionUUID->"ba67e751-d7ec-4b26-a08c-87dcdb324056"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     GraphicsBox[{
       PointSize[Large], 
       PointBox[{{0, 0}, {1.*^6, 6521.805239733665}, {2.*^6, 
         6521.805239733665}, {3.*^6, 6521.805239733664}, {4.*^6, 
         6521.8052397336605`}, {5.*^6, 6521.805239733668}, {6.*^6, 
         6521.805239733663}, {7.*^6, 6521.805239733661}, {8.*^6, 
         6521.805239733666}, {9.*^6, 6521.805239733658}, {1.*^7, 
         6521.80523973366}, {1.1*^7, 6521.805239733659}, {1.2*^7, 
         6521.805239733668}, {1.3*^7, 6521.805239733665}, {1.4*^7, 
         6521.805239733666}, {1.5*^7, 6521.805239733665}}, VertexColors -> {
          GrayLevel[1], 
          RGBColor[1., 0., 0.], 
          RGBColor[1., 0., 0.], 
          RGBColor[1., 0., 0.], 
          RGBColor[1., 0., 0.], 
          RGBColor[1., 0., 0.], 
          RGBColor[1., 0., 0.], 
          RGBColor[1., 0., 0.], 
          RGBColor[1., 0., 0.], 
          RGBColor[1., 0., 0.], 
          RGBColor[1., 0., 0.], 
          RGBColor[1., 0., 0.], 
          RGBColor[1., 0., 0.], 
          RGBColor[1., 0., 0.], 
          RGBColor[1., 0., 0.], 
          RGBColor[1., 0., 0.]}]}, {Axes -> True, AspectRatio -> 1, AxesLabel -> {
         FormBox["\"\[FormalW]\"", TraditionalForm], 
         FormBox[
         "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(1\\)]\\)\"", TraditionalForm]}, 
       PlotLabel -> 
       FormBox["\"Pressure dominated Wave \[CurlyPhi]\"", TraditionalForm]}], 
     
     FormBox[
      FormBox[
       TemplateBox[{"\"0%\"", "\"50%\"", "\"100%\""}, "PointLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 StyleBox[
                 "\"Relative energy flux\"", {FontFamily -> "Arial"}, 
                  Background -> Automatic, StripOnInput -> False]}, {
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0., 1.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0., 1.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0., 0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0., 0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1., 0., 0.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1., 0., 0.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0., 0., 1.], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0., 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0.`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0., 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.5, 0., 0.5], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0., 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666667, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "0.`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0., 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1., 0., 0.], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 1., 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.33333333333333337`, 0.6666666666666667, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "1.`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 1., 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.5, 1., 0.5], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendLabel", "\[Rule]", "\"Relative energy flux\""}]}],
            "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{
       PointSize[Large], 
       PointBox[{{0, 0}, {1.*^6, 0.4680518519048618}, {2.*^6, 
         0.6619252768576988}, {3.*^6, 0.8106895880759244}, {4.*^6, 
         0.9361037038097236}, {5.*^6, 1.0465957578539355`}, {6.*^6, 
         1.14648821033163}, {7.*^6, 1.2383488008234975`}, {8.*^6, 
         1.3238505537153975`}, {9.*^6, 1.4041555557145853`}, {1.*^7, 
         1.4801099150791834`}, {1.1*^7, 1.5523523751994188`}, {1.2*^7, 
         1.6213791761518488`}, {1.3*^7, 1.6875849516188564`}, {1.4*^7, 
         1.751289669073049}, {1.5*^7, 1.8127570275890699`}}, 
        VertexColors -> {
          GrayLevel[1], 
          RGBColor[0.0000712302344270034, 0., 0.999928769765573], 
          RGBColor[0.00010072265171723269`, 0., 0.9998992773482828], 
          RGBColor[0.0001233612175741459, 0., 0.9998766387824258], 
          RGBColor[0.00014244934216520337`, 0., 0.9998575506578348], 
          RGBColor[0.00015926810021971028`, 0., 0.9998407318997803], 
          RGBColor[0.00017447473876438144`, 0., 0.9998255252612356], 
          RGBColor[0.00018845975419594398`, 0., 0.9998115402458041], 
          RGBColor[0.0002014775976593141, 0., 0.9997985224023407], 
          RGBColor[0.000213705020061881, 0., 0.9997862949799381], 
          RGBColor[0.00022527071649244666`, 0., 0.9997747292835075], 
          RGBColor[0.00023627184318432613`, 0., 0.9997637281568157], 
          RGBColor[0.00024678388178141924`, 0., 0.9997532161182185], 
          RGBColor[0.00025686685933238435`, 0., 0.9997431331406677], 
          RGBColor[0.00026656944576128723`, 0., 0.9997334305542387], 
          RGBColor[0.00027593175216125194`, 0., 0.9997240682478388]}]}, {
      Axes -> True, AspectRatio -> 1, AxesLabel -> {
         FormBox["\"\[FormalW]\"", TraditionalForm], 
         FormBox[
         "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(1\\)]\\)\"", TraditionalForm]}, 
       PlotLabel -> 
       FormBox["\"Thermal dominated Wave \[CurlyTheta]\"", TraditionalForm]}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"0%\"", "\"50%\"", "\"100%\""}, "PointLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 StyleBox[
                 "\"Relative energy flux\"", {FontFamily -> "Arial"}, 
                  Background -> Automatic, StripOnInput -> False]}, {
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0., 1.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0., 1.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0., 0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0., 0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1., 0., 0.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1., 0., 0.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0., 0., 1.], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0., 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0.`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0., 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.5, 0., 0.5], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0., 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666667, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "0.`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0., 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1., 0., 0.], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 1., 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.33333333333333337`, 0.6666666666666667, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "1.`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 1., 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.5, 1., 0.5], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendLabel", "\[Rule]", "\"Relative energy flux\""}]}],
            "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{
       PointSize[Large], 
       PointBox[{{0, 0}, {1.*^6, 0.5049893102219934}, {2.*^6, 
         0.7141628176305489}, {3.*^6, 0.8746672834475715}, {4.*^6, 
         1.0099788034315924`}, {5.*^6, 1.1291906437925665`}, {6.*^6, 
         1.2369663846185284`}, {7.*^6, 1.336076406244716}, {8.*^6, 
         1.4283257646529235`}, {9.*^6, 1.5149682559773066`}, {1.*^7, 
         1.5969167615334507`}, {1.1*^7, 1.6748604329656989`}, {1.2*^7, 
         1.7493346725431393`}, {1.3*^7, 1.820765257579674}, {1.4*^7, 
         1.889497406681666}, {1.5*^7, 1.9558156294764353`}}, 
        VertexColors -> {
          GrayLevel[1], 
          RGBColor[0.029386160358943578`, 0., 0.9706138396410564], 
          RGBColor[0.04154463173606594, 0., 0.9584553682639341], 
          RGBColor[0.05087464518257189, 0., 0.9491253548174281], 
          RGBColor[0.058739346292543945`, 0., 0.941260653707456], 
          RGBColor[0.06566743154643893, 0., 0.934332568453561], 
          RGBColor[0.07193015502242961, 0., 0.9280698449775704], 
          RGBColor[0.07768868208565737, 0., 0.9223113179143426], 
          RGBColor[0.08304803052960179, 0., 0.9169519694703983], 
          RGBColor[0.08808114986955161, 0., 0.9119188501304484], 
          RGBColor[0.09284115596369677, 0., 0.9071588440363032], 
          RGBColor[0.09736814784467844, 0., 0.9026318521553216], 
          RGBColor[0.1016932789001317, 0., 0.8983067210998683], 
          RGBColor[0.10584132400254943`, 0., 0.8941586759974506], 
          RGBColor[0.10983237063300527`, 0., 0.8901676293669947], 
          RGBColor[0.11368297380694066`, 0., 0.8863170261930593]}]}, {
      Axes -> True, AspectRatio -> 1, AxesLabel -> {
         FormBox["\"\[FormalW]\"", TraditionalForm], 
         FormBox[
         "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(1\\)]\\)\"", TraditionalForm]}, 
       PlotLabel -> FormBox["\"Shear Wave\"", TraditionalForm]}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"0%\"", "\"50%\"", "\"100%\""}, "PointLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 StyleBox[
                 "\"Relative energy flux\"", {FontFamily -> "Arial"}, 
                  Background -> Automatic, StripOnInput -> False]}, {
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0., 1.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0., 1.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0., 0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0., 0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1., 0., 0.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1., 0., 0.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0., 0., 1.], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0., 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0.`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0., 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.5, 0., 0.5], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0., 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666667, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "0.`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0., 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1., 0., 0.], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 1., 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.33333333333333337`, 0.6666666666666667, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "1.`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 1., 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.5, 1., 0.5], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendLabel", "\[Rule]", "\"Relative energy flux\""}]}],
            "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.694941529825543*^9, 3.694941876528112*^9, 3.694942476236816*^9, 
   3.703246032288622*^9, 3.704190938821062*^9, 3.704191092502658*^9, 
   3.704191161262248*^9, 3.704192189809314*^9, {3.846767009567337*^9, 
   3.846767039051855*^9}, 3.846767083586129*^9, 3.846767181162384*^9},
 FontSize->16,
 CellLabel->
  "Out[157]=",ExpressionUUID->"1b7f2d37-afc3-492b-ae2d-d756e4a0a23e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     GraphicsBox[{
       PointSize[Large], 
       PointBox[{{0, 0}, {1.*^6, 1471.7095366722037`}, {2.*^6, 
         1471.7095366722037`}, {3.*^6, 1471.7095366722037`}, {4.*^6, 
         1471.7095366722037`}, {5.*^6, 1471.7095366722037`}, {6.*^6, 
         1471.7095366722037`}, {7.*^6, 1471.7095366722037`}, {8.*^6, 
         1471.7095366722037`}, {9.*^6, 1471.7095366722035`}, {1.*^7, 
         1471.7095366722037`}, {1.1*^7, 1471.7095366722037`}, {1.2*^7, 
         1471.7095366722037`}, {1.3*^7, 1471.709536672204}, {1.4*^7, 
         1471.7095366722037`}, {1.5*^7, 1471.7095366722042`}}, VertexColors -> {
          GrayLevel[1], 
          RGBColor[
          0.9997853903146274, 7.90330085820301*^-8, 0.00021460968537256875`], 
          
          RGBColor[
          0.9999461906258356, 3.161320341060758*^-7, 0.00005380937416443743], 
          
          RGBColor[
          0.999975798346685, 7.112970767941817*^-7, 0.00002420165331501467], 
          RGBColor[
          0.9999859538058018, 1.2645281365353256`*^-6, 
           0.000014046194198147344`], 
          RGBColor[
          0.9999904265703516, 1.9758252133295073`*^-6, 9.573429648301879*^-6], 
          RGBColor[
          0.9999926145156963, 2.845188307176727*^-6, 7.385484303623624*^-6], 
          RGBColor[
          0.9999936819249319, 3.8726174180769846`*^-6, 6.318075068123541*^-6], 
          RGBColor[
          0.9999941151385585, 5.05811254603028*^-6, 5.884861441485256*^-6], 
          RGBColor[
          0.9999941464972915, 6.401673691147636*^-6, 5.85350270859708*^-6], 
          RGBColor[
          0.9999938983734485, 7.903300853207007*^-6, 6.1016265514579615`*^-6], 
          RGBColor[
          0.999993440194547, 9.562994032430439*^-6, 6.559805452999168*^-6], 
          RGBColor[
          0.9999928137294156, 0.000011380753228706908`, 
           7.186270584380594*^-6], 
          RGBColor[
          0.9999920453295161, 0.000013356578441925393`, 
           7.954670483922843*^-6], 
          RGBColor[
          0.9999911522859146, 0.000015490469672307938`, 8.84771408532492*^-6], 
          RGBColor[
          0.9999901463258498, 0.00001778242691974352, 
           9.853674150239744*^-6]}]}, {
      Axes -> True, AspectRatio -> 1, AxesLabel -> {
         FormBox["\"\[FormalW]\"", TraditionalForm], 
         FormBox[
         "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(1\\)]\\)\"", TraditionalForm]}, 
       PlotLabel -> 
       FormBox["\"Pressure dominated Wave \[CurlyPhi]\"", TraditionalForm]}], 
     
     FormBox[
      FormBox[
       TemplateBox[{"\"0%\"", "\"50%\"", "\"100%\"", "\"Decay rate\""}, 
        "PointLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 StyleBox[
                 "\"\[Theta] energy flux\"", {FontFamily -> "Arial"}, 
                  Background -> Automatic, StripOnInput -> False]}, {
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0., 1.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0., 1.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0., 0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0., 0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1., 0., 0.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1., 0., 0.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1., 0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1., 0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0., 0., 1.], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0., 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0.`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0., 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.5, 0., 0.5], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0., 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666667, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "0.`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0., 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1., 0., 0.], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 1., 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.33333333333333337`, 0.6666666666666667, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "1.`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 1., 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.5, 1., 0.5], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendLabel", "\[Rule]", "\"\[Theta] energy flux\""}]}],
            "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{
       PointSize[Large], 
       PointBox[{{0, 0}, {1.*^6, 0.5245552302317659}, {2.*^6, 
         0.7418331208075046}, {3.*^6, 0.9085563101374082}, {4.*^6, 
         1.0491104604635317`}, {5.*^6, 1.172941152751281}, {6.*^6, 
         1.2848926559759788`}, {7.*^6, 1.3878426881114825`}, {8.*^6, 
         1.4836662416150093`}, {9.*^6, 1.5736656906952975`}, {1.*^7, 
         1.658789286086394}, {1.1*^7, 1.7397528804972588`}, {1.2*^7, 
         1.8171126202748167`}, {1.3*^7, 1.8913107794134494`}, {1.4*^7, 
         1.9627059519675922`}, {1.5*^7, 2.0315936708536264`}}, VertexColors -> {
          GrayLevel[1], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5]}]}, {
      Axes -> True, AspectRatio -> 1, AxesLabel -> {
         FormBox["\"\[FormalW]\"", TraditionalForm], 
         FormBox[
         "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(1\\)]\\)\"", TraditionalForm]}, 
       PlotLabel -> 
       FormBox["\"Thermal dominated Wave \[CurlyTheta]\"", TraditionalForm]}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"0%\"", "\"50%\"", "\"100%\"", "\"Decay rate\""}, 
        "PointLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 StyleBox[
                 "\"\[Theta] energy flux\"", {FontFamily -> "Arial"}, 
                  Background -> Automatic, StripOnInput -> False]}, {
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0., 1.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0., 1.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0., 0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0., 0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1., 0., 0.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1., 0., 0.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1., 0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1., 0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0., 0., 1.], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0., 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0.`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0., 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.5, 0., 0.5], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0., 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666667, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "0.`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0., 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1., 0., 0.], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 1., 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.33333333333333337`, 0.6666666666666667, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "1.`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 1., 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.5, 1., 0.5], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendLabel", "\[Rule]", "\"\[Theta] energy flux\""}]}],
            "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{
       PointSize[Large], 
       PointBox[{{0, 0}, {1.*^6, 1.335502567656249}, {2.*^6, 
         1.8886858506604454`}, {3.*^6, 2.3131583120818835`}, {4.*^6, 
         2.6710051499430034`}, {5.*^6, 2.986274542852781}, {6.*^6, 
         3.271299860844175}, {7.*^6, 3.5334076914258934`}, {8.*^6, 
         3.77737171166622}, {9.*^6, 4.006507728978534}, {1.*^7, 
         4.223229962556298}, {1.1*^7, 4.429360952880428}, {1.2*^7, 
         4.626316632610693}, {1.3*^7, 4.815223018660599}, {1.4*^7, 
         4.996993081214683}, {1.5*^7, 5.172379238607312}}, VertexColors -> {
          GrayLevel[1], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5]}]}, {
      Axes -> True, AspectRatio -> 1, AxesLabel -> {
         FormBox["\"\[FormalW]\"", TraditionalForm], 
         FormBox[
         "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(1\\)]\\)\"", TraditionalForm]}, 
       PlotLabel -> FormBox["\"Shear Wave\"", TraditionalForm]}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"0%\"", "\"50%\"", "\"100%\"", "\"Decay rate\""}, 
        "PointLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 StyleBox[
                 "\"\[Theta] energy flux\"", {FontFamily -> "Arial"}, 
                  Background -> Automatic, StripOnInput -> False]}, {
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0., 1.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0., 1.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0., 0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0., 0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1., 0., 0.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1., 0., 0.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1., 0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1., 0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0., 0., 1.], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0., 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0.`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0., 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.5, 0., 0.5], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0., 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666667, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "0.`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0., 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1., 0., 0.], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 1., 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.33333333333333337`, 0.6666666666666667, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "1.`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 1., 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.5, 1., 0.5], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendLabel", "\[Rule]", "\"\[Theta] energy flux\""}]}],
            "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.694941529825543*^9, 3.694941876528112*^9, 3.694942476236816*^9, 
   3.703246032288622*^9, 3.704190938821062*^9, 3.704191092502658*^9, 
   3.704191161262248*^9, 3.704192189809314*^9, {3.846767009567337*^9, 
   3.846767039051855*^9}, 3.846767083586129*^9, 3.846767181288445*^9},
 FontSize->16,
 CellLabel->
  "Out[158]=",ExpressionUUID->"cd230116-fc9e-4211-ac79-250fdd057b15"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     GraphicsBox[{
       PointSize[Large], 
       PointBox[{{0, 0}, {1.*^6, 6521.805239733665}, {2.*^6, 
         6521.805239733665}, {3.*^6, 6521.805239733664}, {4.*^6, 
         6521.8052397336605`}, {5.*^6, 6521.805239733668}, {6.*^6, 
         6521.805239733663}, {7.*^6, 6521.805239733661}, {8.*^6, 
         6521.805239733666}, {9.*^6, 6521.805239733658}, {1.*^7, 
         6521.80523973366}, {1.1*^7, 6521.805239733659}, {1.2*^7, 
         6521.805239733668}, {1.3*^7, 6521.805239733665}, {1.4*^7, 
         6521.805239733666}, {1.5*^7, 6521.805239733665}}, VertexColors -> {
          GrayLevel[1], 
          RGBColor[
          0.9998901958927056, 1.488796863569064*^-10, 
           0.00010980410729438672`], 
          RGBColor[
          0.9999725361176641, 5.955185233830207*^-10, 
           0.000027463882335820866`], 
          RGBColor[
          0.9999877448161565, 1.3399167331229478`*^-9, 
           0.00001225518384345703], 
          RGBColor[
          0.9999929696863967, 2.3820742045543852`*^-9, 7.03031360321793*^-6], 
          
          RGBColor[
          0.9999952135894769, 3.7219910486996355`*^-9, 
           4.7864105231498755`*^-6], 
          RGBColor[
          0.9999961914366209, 5.359667043514094*^-9, 3.8085633791151707`*^-6], 
          RGBColor[
          0.9999965217600427, 7.2951024110423646`*^-9, 
           3.4782399572774736`*^-6], 
          RGBColor[
          0.9999965091858414, 9.528297040262146*^-9, 3.490814158624289*^-6], 
          RGBColor[
          0.9999963207741304, 1.2059250931173437`*^-8, 
           3.6792258696349833`*^-6], 
          RGBColor[
          0.9999960436327286, 1.488796408377624*^-8, 3.956367271351624*^-6], 
          RGBColor[
          0.9999957209563117, 1.8014436609092854`*^-8, 4.279043688271145*^-6], 
          RGBColor[
          0.9999953740509828, 2.1438668285078677`*^-8, 4.625949017122988*^-6], 
          RGBColor[
          0.999995013688328, 2.5160659333778312`*^-8, 
           4.9863116720061385`*^-6], 
          RGBColor[
          0.9999946455189148, 2.9180409644169458`*^-8, 5.354481085129148*^-6], 
          RGBColor[
          0.9999942726266347, 3.3497919216252114`*^-8, 
           5.727373365294053*^-6]}]}, {
      Axes -> True, AspectRatio -> 1, AxesLabel -> {
         FormBox["\"\[FormalW]\"", TraditionalForm], 
         FormBox[
         "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(1\\)]\\)\"", TraditionalForm]}, 
       PlotLabel -> 
       FormBox["\"Pressure dominated Wave \[CurlyPhi]\"", TraditionalForm]}], 
     
     FormBox[
      FormBox[
       TemplateBox[{"\"0%\"", "\"50%\"", "\"100%\"", "\"Decay rate\""}, 
        "PointLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 StyleBox[
                 "\"\[Theta] energy flux\"", {FontFamily -> "Arial"}, 
                  Background -> Automatic, StripOnInput -> False]}, {
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0., 1.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0., 1.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0., 0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0., 0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1., 0., 0.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1., 0., 0.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1., 0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1., 0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0., 0., 1.], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0., 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0.`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0., 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.5, 0., 0.5], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0., 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666667, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "0.`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0., 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1., 0., 0.], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 1., 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.33333333333333337`, 0.6666666666666667, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "1.`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 1., 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.5, 1., 0.5], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendLabel", "\[Rule]", "\"\[Theta] energy flux\""}]}],
            "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{
       PointSize[Large], 
       PointBox[{{0, 0}, {1.*^6, 0.4680518519048618}, {2.*^6, 
         0.6619252768576988}, {3.*^6, 0.8106895880759244}, {4.*^6, 
         0.9361037038097236}, {5.*^6, 1.0465957578539355`}, {6.*^6, 
         1.14648821033163}, {7.*^6, 1.2383488008234975`}, {8.*^6, 
         1.3238505537153975`}, {9.*^6, 1.4041555557145853`}, {1.*^7, 
         1.4801099150791834`}, {1.1*^7, 1.5523523751994188`}, {1.2*^7, 
         1.6213791761518488`}, {1.3*^7, 1.6875849516188564`}, {1.4*^7, 
         1.751289669073049}, {1.5*^7, 1.8127570275890699`}}, 
        VertexColors -> {
          GrayLevel[1], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5]}]}, {
      Axes -> True, AspectRatio -> 1, AxesLabel -> {
         FormBox["\"\[FormalW]\"", TraditionalForm], 
         FormBox[
         "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(1\\)]\\)\"", TraditionalForm]}, 
       PlotLabel -> 
       FormBox["\"Thermal dominated Wave \[CurlyTheta]\"", TraditionalForm]}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"0%\"", "\"50%\"", "\"100%\"", "\"Decay rate\""}, 
        "PointLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 StyleBox[
                 "\"\[Theta] energy flux\"", {FontFamily -> "Arial"}, 
                  Background -> Automatic, StripOnInput -> False]}, {
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0., 1.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0., 1.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0., 0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0., 0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1., 0., 0.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1., 0., 0.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1., 0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1., 0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0., 0., 1.], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0., 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0.`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0., 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.5, 0., 0.5], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0., 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666667, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "0.`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0., 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1., 0., 0.], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 1., 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.33333333333333337`, 0.6666666666666667, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "1.`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 1., 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.5, 1., 0.5], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendLabel", "\[Rule]", "\"\[Theta] energy flux\""}]}],
            "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{
       PointSize[Large], 
       PointBox[{{0, 0}, {1.*^6, 0.5049893102219934}, {2.*^6, 
         0.7141628176305489}, {3.*^6, 0.8746672834475715}, {4.*^6, 
         1.0099788034315924`}, {5.*^6, 1.1291906437925665`}, {6.*^6, 
         1.2369663846185284`}, {7.*^6, 1.336076406244716}, {8.*^6, 
         1.4283257646529235`}, {9.*^6, 1.5149682559773066`}, {1.*^7, 
         1.5969167615334507`}, {1.1*^7, 1.6748604329656989`}, {1.2*^7, 
         1.7493346725431393`}, {1.3*^7, 1.820765257579674}, {1.4*^7, 
         1.889497406681666}, {1.5*^7, 1.9558156294764353`}}, 
        VertexColors -> {
          GrayLevel[1], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5], 
          RGBColor[0.5, 1., 0.5]}]}, {
      Axes -> True, AspectRatio -> 1, AxesLabel -> {
         FormBox["\"\[FormalW]\"", TraditionalForm], 
         FormBox[
         "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(1\\)]\\)\"", TraditionalForm]}, 
       PlotLabel -> FormBox["\"Shear Wave\"", TraditionalForm]}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"0%\"", "\"50%\"", "\"100%\"", "\"Decay rate\""}, 
        "PointLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 StyleBox[
                 "\"\[Theta] energy flux\"", {FontFamily -> "Arial"}, 
                  Background -> Automatic, StripOnInput -> False]}, {
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0., 1.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0., 1.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0., 0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0., 0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1., 0., 0.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1., 0., 0.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1., 0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1., 0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0., 0., 1.], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0., 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0.`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0., 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.5, 0., 0.5], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0., 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666667, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "0.`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0., 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1., 0., 0.], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 1., 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.33333333333333337`, 0.6666666666666667, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "1.`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 1., 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.5, 1., 0.5], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendLabel", "\[Rule]", "\"\[Theta] energy flux\""}]}],
            "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.694941529825543*^9, 3.694941876528112*^9, 3.694942476236816*^9, 
   3.703246032288622*^9, 3.704190938821062*^9, 3.704191092502658*^9, 
   3.704191161262248*^9, 3.704192189809314*^9, {3.846767009567337*^9, 
   3.846767039051855*^9}, 3.846767083586129*^9, 3.846767181412128*^9},
 FontSize->16,
 CellLabel->
  "Out[159]=",ExpressionUUID->"73a923e3-e3cc-4b5d-89fd-0b4c2ec3b09e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"An", " ", "energy", " ", "flux", " ", "check"}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Energy", " ", "flux", " ", "in", " ", "upper", " ", "halfspace"}],
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"X", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"\"\<height\>\"", "/.", "opts"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"us", "=", 
     RowBox[{
      RowBox[{"DisplacementTW", "[", 
       RowBox[{"TWin", ",", "X"}], "]"}], " ", "+", 
      RowBox[{"Plus", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"DisplacementTW", "[", 
           RowBox[{"#", ",", "X"}], "]"}], "&"}], "/@", "TWRs"}], ")"}]}]}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vs", " ", "=", " ", 
     RowBox[{
      RowBox[{"-", "I"}], " ", 
      RowBox[{"TWin", "[", "\"\<rng\[Omega]\>\"", "]"}], " ", "us"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Sigma]s", "=", 
     RowBox[{
      RowBox[{"StressTW", "[", 
       RowBox[{"TWin", ",", "X"}], "]"}], " ", "+", 
      RowBox[{"Plus", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"StressTW", "[", 
           RowBox[{"#", ",", "X"}], "]"}], "&"}], "/@", "TWRs"}], ")"}]}]}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"EIR", "=", " ", 
     RowBox[{
      RowBox[{"-", "0.5"}], 
      RowBox[{"Re", "@", 
       RowBox[{"MapThread", "[", 
        RowBox[{"Dot", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"vs", "\[Conjugate]"}], ",", "\[Sigma]s"}], "}"}]}], 
        "]"}]}]}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Energy", " ", "flux", " ", "in", " ", "lower", " ", "halfspace"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"X", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"\"\<height\>\"", "/.", "opts"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"us", "=", 
     RowBox[{"Plus", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"DisplacementTW", "[", 
          RowBox[{"#", ",", "X"}], "]"}], "&"}], "/@", "TWTs"}], ")"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vs", " ", "=", " ", 
     RowBox[{
      RowBox[{"-", "I"}], " ", 
      RowBox[{
       RowBox[{"TWTs", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<rng\[Omega]\>\"", "]"}], 
      " ", "us"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Sigma]s", "=", 
     RowBox[{"Plus", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"StressTW", "[", 
          RowBox[{"#", ",", "X"}], "]"}], "&"}], "/@", "TWTs"}], ")"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ET", "=", 
     RowBox[{
      RowBox[{"-", "0.5"}], 
      RowBox[{"Re", "@", 
       RowBox[{"MapThread", "[", 
        RowBox[{"Dot", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"vs", "\[Conjugate]"}], ",", "\[Sigma]s"}], "}"}]}], 
        "]"}]}]}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"total", " ", "Energy", " ", "going", " ", "down"}], " ", "+", 
     " ", 
     RowBox[{"total", " ", "Energy", " ", "going", " ", "up"}]}], "  ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"EIR", ".", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], " ", "+", 
    RowBox[{"ET", ".", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"-", "1"}]}], "}"}]}]}], " ", 
   RowBox[{"(*", 
    RowBox[{"should", " ", "be", " ", "approximately", " ", "zero"}], "*)"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.6894073006203957`*^9, 3.689407409633*^9}},
 FontSize->16,
 CellLabel->
  "In[160]:=",ExpressionUUID->"df7ebeb6-71a6-4272-aafc-307e8ad23ea1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.0004119873046875`"}], ",", 
   RowBox[{"-", "0.0009765625`"}], ",", "0.00212860107421875`", ",", 
   RowBox[{"-", "0.00057220458984375`"}], ",", 
   RowBox[{"-", "0.001239776611328125`"}], ",", 
   RowBox[{"-", "0.001056671142578125`"}], ",", 
   RowBox[{"-", "0.0001068115234375`"}], ",", 
   RowBox[{"-", "0.0001678466796875`"}], ",", 
   RowBox[{"-", "0.00022125244140625`"}], ",", "0.00072479248046875`", ",", 
   RowBox[{"-", "0.0006561279296875`"}], ",", 
   RowBox[{"-", "0.000518798828125`"}], ",", "0.00030517578125`", ",", 
   "0.00112152099609375`", ",", "0.00011444091796875`"}], "}"}]], "Output",
 CellChangeTimes->{3.6894074229017878`*^9, 3.689407453598686*^9, 
  3.6949418909797087`*^9, 3.7041910437585487`*^9, 3.846767095397376*^9, 
  3.846767139030326*^9, 3.8467671830100822`*^9},
 FontSize->16,
 CellLabel->
  "Out[170]=",ExpressionUUID->"61cb7b03-3e33-4abb-9e3e-83401a3c187d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1200, 627},
WindowMargins->{{0, Automatic}, {0, Automatic}},
FrontEndVersion->"12.3 for Linux x86 (64-bit) (May 11, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"87c6f532-92b8-4262-88cb-90b8d7be9775"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 326, 7, 125, "Section",ExpressionUUID->"27aba6e3-a98b-4bdb-b1b5-76f20833b5ca"],
Cell[751, 24, 3110, 42, 39, "Input",ExpressionUUID->"9f6beb21-192d-4453-96ea-bdca6dae0e1a"],
Cell[CellGroupData[{
Cell[3886, 70, 3851, 60, 190, "Input",ExpressionUUID->"f2a851b3-393a-4380-be6f-429c56877bab"],
Cell[7740, 132, 742, 11, 39, "Output",ExpressionUUID->"bcfb01ad-5f2f-4ec3-989f-aec8b086b9db"],
Cell[8485, 145, 901, 15, 39, "Output",ExpressionUUID->"b3eca7e8-595d-42ce-aee8-e40bc9997842"],
Cell[9389, 162, 25393, 562, 134, "Output",ExpressionUUID->"cd7945ea-58fe-4c58-b321-996ab9cd5a92"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34819, 729, 8484, 150, 233, "Input",ExpressionUUID->"8a8a4f99-e58d-45cc-b02b-8d5a4b696c7d"],
Cell[43306, 881, 1440, 26, 93, "Output",ExpressionUUID->"ea525bed-0cbb-4cff-8819-f7d52c25291b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44783, 912, 8576, 162, 553, "Input",ExpressionUUID->"27cb5179-23d5-4128-8245-47f8be8f47f4"],
Cell[53362, 1076, 17541, 373, 469, "Output",ExpressionUUID->"316eb9a9-482a-4557-9ab7-6f54e3293bc0"],
Cell[70906, 1451, 16292, 340, 479, "Output",ExpressionUUID->"e697aa32-84f1-4722-b559-b471b114a9e7"],
Cell[87201, 1793, 17171, 364, 479, "Output",ExpressionUUID->"cf6cf072-a8d6-4d42-b276-702a69475117"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104409, 2162, 5403, 77, 160, "Input",ExpressionUUID->"f343db25-9ba2-432b-abfb-c076514871e2"],
Cell[109815, 2241, 2525, 52, 105, "Output",ExpressionUUID->"f93d3494-6cf7-4c72-b17b-872d02ef01e7"],
Cell[112343, 2295, 2440, 52, 180, "Output",ExpressionUUID->"894a37a2-742f-41a2-a82e-c5cd1bcff36a"],
Cell[114786, 2349, 2456, 52, 147, "Output",ExpressionUUID->"4e281d67-4530-48f6-ad4f-d33a08c99bd8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117279, 2406, 5983, 112, 453, "Input",ExpressionUUID->"af4b6260-1d45-4704-a51e-dcdd6f83f148"],
Cell[123265, 2520, 16385, 388, 117, "Output",ExpressionUUID->"9b81b68c-2b7d-4438-93bd-d9093f2a4193"],
Cell[139653, 2910, 12476, 305, 117, "Output",ExpressionUUID->"7520e6c8-abc1-423a-818d-819a921fc97a"],
Cell[152132, 3217, 12010, 296, 117, "Output",ExpressionUUID->"e27f2447-fb05-4e6e-94e7-37d90a0f1ae2"],
Cell[164145, 3515, 947, 27, 81, "Output",ExpressionUUID->"5cfa1a0e-1fd0-4a09-8e5f-49908a0f6e8b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[165129, 3547, 241, 3, 58, "Subsection",ExpressionUUID->"c538573e-5d09-4eb4-bb0b-20ff8921c05e"],
Cell[165373, 3552, 12908, 242, 803, "Input",ExpressionUUID->"3f2c3962-75c8-4fe1-8c23-81f50305affd"],
Cell[CellGroupData[{
Cell[178306, 3798, 11109, 208, 703, "Input",ExpressionUUID->"9096b768-e85c-4df7-9523-23e2d5cb0bcd"],
Cell[189418, 4008, 570, 12, 39, "Output",ExpressionUUID->"04eba9e1-3e79-4f3a-b73a-8963d8eb7729"],
Cell[189991, 4022, 3168, 48, 89, "Message",ExpressionUUID->"e9782d09-c8dc-46a3-8fc7-0738561bb288"],
Cell[193162, 4072, 2562, 41, 90, "Message",ExpressionUUID->"f8c6a1dc-d705-4cf2-aab5-acc44c374906"],
Cell[195727, 4115, 3230, 49, 90, "Message",ExpressionUUID->"706f83c4-3488-475e-9317-c1978b3a8e0d"],
Cell[198960, 4166, 504, 11, 33, "Message",ExpressionUUID->"594033f3-c1b1-42d0-b0c7-10ceb05259ff"],
Cell[199467, 4179, 7904, 187, 629, "Output",ExpressionUUID->"9f8c4574-2be2-4469-98db-f91326cba2b0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[207408, 4371, 5628, 89, 130, "Input",ExpressionUUID->"eddd02f3-202f-42a6-930d-902f00b727f5"],
Cell[213039, 4462, 51450, 1057, 552, "Output",ExpressionUUID->"ba67e751-d7ec-4b26-a08c-87dcdb324056"],
Cell[264492, 5521, 51460, 1060, 542, "Output",ExpressionUUID->"1b7f2d37-afc3-492b-ae2d-d756e4a0a23e"],
Cell[315955, 6583, 54758, 1157, 552, "Output",ExpressionUUID->"cd230116-fc9e-4211-ac79-250fdd057b15"],
Cell[370716, 7742, 54815, 1162, 542, "Output",ExpressionUUID->"73a923e3-e3cc-4b5d-89fd-0b4c2ec3b09e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[425568, 8909, 4086, 123, 580, "Input",ExpressionUUID->"df7ebeb6-71a6-4272-aafc-307e8ad23ea1"],
Cell[429657, 9034, 954, 19, 105, "Output",ExpressionUUID->"61cb7b03-3e33-4abb-9e3e-83401a3c187d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

